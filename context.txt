THE EXCELSIOR SCHOOL
ORIENTATION TO THE TEACHERS
VISION – the reason we exist
“A better world which has just, peaceful and sustainable future, with/ through learners, who are creative and have achieved congruence of their body, mind, heart, and soul.”
MISSION – our core purpose
“Become an academic institution that is best known for providing a safe, supportive and conducive environment; in order to develop lifelong learners, who continuously strive for excellence and are empowered to meet current and future challenges while enhancing social awareness, civic responsibility, personal growth, and responsible global citizenship.”
CORE VALUES - Our Enduring Character and Genetic Codes
1.	Excellence through Exploration, Engagement, and Expressions
2.	Value, Purpose, and Impact based actions
3.	Respect for people, their opinions, relationships, individual differences, diversity and resources
4.	Honest, Truthful, Righteous, and Trustworthy approaches/ practices
5.	Responsible for our duties and Accountable for our actions
Our Duty
We have a pious duty of imparting life skills and education to young ones so that they can be responsible persons and valuable members of the community. 
Our prime duty is to immerse our students in a friendly environment ensuring their holistic development including academic, personal, emotional, social, and practical skills. 
In course of teaching, the teachers should prepare lesson plans and deliver their lessons, take care of students’ activities ensure their safety and be proactive for personal as well as institutional development. We have to make the most out of the available resources for the maximum benefit of everyone involved here. 
We must cultivate a good relationship among teachers, students, parents, and staff.  We must be role models for our students as we can see our reflection in our students.
You are supposed to speak English within school premises except in the case you are a Nepali subject teacher. 
You are also expected to correct the child’s mistake on the spot so that it will have a positive and meaningful impact. 
Teaching Method
We followed inquiry-based teaching method with the 5e pedagogical model. In this model, students will be led through a theme. With step-by-step procedure, they will consolidate the knowledge. The model rightly matches with the motto of the school. 
5E Pedagogical model 
The 5E pedagogical model include five crucial stages leading the students to construct and apply new knowledge: Engage, Explore, Explain, Elaborate and Evaluate. Each stage has specific value in learning procedure. 
Engage 
This is the first stage of inquiry-based learning pedagogy. At this stage, the curriculum task or the teacher accesses the learner’s prior knowledge. The teacher poses questions that arouses interest of students on the topic and dig into the prior ideas that the students have on the topic of inquiry. Then the students will connect the past knowledge with the topic. Moreover, at this stage, parameters are set for the inquiry as they frame the ideas. 
With interesting questions, the teacher lead conversations. At this stage, the students may brainstorm or work individually or work collaboratively to help each other express their prior knowledge. 
While discussing, the students uncover what they still do not understand about the topic under discussion. They set what they would like to learn and begin to thing what they would need to do in order to find answers to questions. 
By the end of this stage, the teacher uncovers the misconceptions the students may have on the topic. They teacher ought to note these misconceptions to ensure that such misconceptions were cleared by the end of the lesson. 
What can be done at this stage? 
	Show a short video and ask the students to note the things they could see or thing about it. Then they will discuss about it. They also would note what they wanted to know about it. 
	Do a scavenger hunt activity? The teacher provides opportunity to hunt ideas on net or provides paper related to the topic and ask the students to see examples or note what they think about it. 
	Visit a webcam. There are several webcams that focus on bird nests, zoos, wildlife reserves, spaces, volcanoes or may other. Such webcam observations are very helpful in science lessons.
	Use a mind mapping tool. This could be both online and offline. 
	Do a KWHL activity. This can be done individually or a whole class. In this part, the teacher may introduce a topic. Then, making three columns, ask the students to note what they know, what they want, and how to find out about the topic. The last learn column can be revisited in the Explanation, Extension or Evaluation phase of the unit.  
	Demonstration can be done here. This can be ‘WOW’ demonstration that has a surprising or unexpected outcome. The teacher should not explain here. Once the demonstration is carried out, the students then will discuss the matter in groups or think about it individually. 
	Use a graphic organizer. If the students have to conceptualize the ideas about certain process or structure, a graphic organizer could be a good engagement activity. Once they see the things, they will fill in or complete the part they know and leave what they still want to know. This will lead them to discuss or express what already know and bring forth the misconceptions. 
	Connecting ideas with the text or current events. This can be done by bringing in the recent magazine or newspaper articles in the class and discuss. 
What types of questions 
Asking right question is the most essential part of Inquiry. The 5e pedagogical model provides a clear, cohesive framework for guiding students. Once the teacher has choses one or more activities to engage the students’ attention, it is important to guide their thinking along the right path. In the engagement phase, the teacher needs to ask broader, more open-ended questions. The more direct questions are asked in later phases of 5e model. 
Some sample questions: 
-	Have you heard of __________________? 
-	What are you not sure about ___________________?
-	What are you experiences with ________________?
-	What do you want to know about _________________?
-	What would you like to learn about _________________?
-	What sort of investigation would you need to do in order to find out about ____________________?
-	Why do you think ___________________happened? 
What the Engagement phase is not
In traditional pedagogical models, the teacher may begin with explaining vocabulary or introducing concepts necessary to understand the topic. They teacher gives and the students receive. There will not engagement of students as explanation follow really quickly.  
In the 5e model, there is no direct teaching of the concept in the first phase. The direct teaching does not arouse curiosity and interest among students. At the same time, the students will have chance to see the topic from their own angle thus a kind of authoritative imposing comes when the teacher goes to the direct explanation. 
Explore 
Exploration is the second phase of inquiry-based learning. In this phase, the students are led to explore the topic in greater details. Here too, the teacher needs to be tactful not to tell them the exact answer so that the students will have right opportunity to negotiate their prior knowledge with the present one. So at this stage the teacher need to ask the questions and let students explore the limits of their understanding. Actually, towards the end of the engagement phase, students will have some questions of their own. They would love to explore answer to them as well. 
The teacher here asks students to discard the misconceptions they find to be false. Though research and discussions, students will verify their answers. Since they work collaboratively at this stage. Thus, they are challenged to think creatively and make connections. At this stage too the students are still questioning, observing, wondering and developing critical thinking skills and problem-solving skills. 
 What can a teacher do at this stage?
	The teacher may lead to laboratory investigation. Here they a simple question. They also get a range of materials for investigation. They form a hypothesis and design an experiment to test their ideas. In the process, the teacher needs to ask leading questions, helping students to identify and control for variables. 
	Use webpages. They can go online and investigate or experiment virtually.
	Create models. Here the students create model or diagram without defining key terms. The teacher asks open-ended questions helping students to consider different aspects of the model they are creating.
	Solve real life problem. Here the teacher provides a real-life problem and ask the students to solve it. In the process, he/she asks open-ended questions to help students consider all sides of the problem. 
	Read an article. This should not be instructive. Key terms and ideas should not be defined here. This is done to ensure exploration of the ideas using prior knowledge. 
What types of questions
Here the teacher must frame questions that encourages students explore in detail. Here too the teacher is asking broad, open-ended questions. However, they are more direct than the engage questions. 
	What if _____________________?
	Have you considered what might happen when you ______________________________?
	Why do you suppose __________________________________________?
	What might you do to find the answer to _____________________?
	Is there any information you do not yet have? Where could you find this information? 
	What might happen if you _____________________?
	Why did you decide to _____________________?
	What pattern did you notice? 
	What else might have caused_____________________?
	What did you expect to find and why?
	What do you think could be an alternative explanation?
	What evidence do you have about _____________________?
Outcome of the Exploration 
Engage and Explore phases provide a foundation for students leading them into Explain stage.  At this stage students wonder, questions and search for answers. The teacher goes around the class listening to the discussions of the students. This stage fosters collaborative work and ensures participation of all the students design and adjustment of hypothesis. Students are yet to reach to conclusions at this stage as well. 
Explain 
At the explanation stage, students learn to concretely describe and interpret their learning. Here, first the students present their ideas. Then, the teacher provides feedback. Actually, direct teacher takes place at this stage. Students’ misconceptions are directly and explicitly explained here. If the misconceptions are clear by the peer presentation and discussion, the teacher expresses conformity. If not, the teacher directly addresses the issues. This phase is the phase of drawing conclusions. Here too the teacher directs the discussion with appropriate questions. 
First the students try to pitch their ideas and explanation after group discussions or observations. The teacher provides more resources to the students so that they could find the answers to the questions about the topic. This is the phase direct instruction takes place.  Sometimes, students are unable to clear their misconceptions however engaged they are. At that point, it the job of the teacher needs to provide through explanation of the topic. 
What can be done at this stage? 
	Analyse findings. At the stage, students can analyse findings from explorations phase as they explain the ideas in groups. At this stage they also need to develop conclusions. 
	Make video or oral presentation. At this stage, the students present their ideas with evidence. The teacher may provide with a framework of questions to answer during the presentation. 
	Write a report. Combining their prior experiences with what they have learned, students analyse data or finding and form conclusion and write a report. The teacher is expected to provide a format for the report that guides students writing. 
	Teacher explains the topic. At the stage, the teacher may explain the topic as a class lecture, guided question and answer session or other oral presentation. 
	Read a text. After exploration, the teacher may provide more focused resources to read. Students may read the selection and do comprehension exercises defining key terms and ideas. 
	Search in website. The teacher provides more directed webpages that directly explain the ideas and then students read them, synthesize knowledge or information and define key terms or concepts. 
	Teacher provides more explicit video clip that explains and demonstrates the concepts. 
	Students complete the KWHL chart with what they learned. 
	Revisit the concept map prepared in engagement phase. Students make new connections and change the concept map prepared earlier. 
What types of questions
At the stage, the teacher can ask more pointed, less open-ended questions. 
	What patterns did you notice? 
	What is format of the document? 
	Why do you think that _____________________? What evidence do you have of this? Can you think what else might have caused it to happen?
	Why do you think _____________________?
	What did you expect to find? Why? Why do you think your observations were different from your expectations?
	How can you explain _____________________? Do you think that there might be another explanation for it?
Discussion is important here. Even when students are given articles or textbook to read, they will digest material better, if they are given time and opportunity to discuss what they have learned in a group setting. After all students must reflect on what they have learned. 
Elaborate 
By the time students completes three stages- Engagement, Exploration and Explanation- attentive and curious students will have understood ‘why’ of the topic. Students who were curious to know why something happened, why something is true will have learned it in the explanation phase. 
After explanation, in the traditional pedagogy, the teacher leads students directly to evaluation phase but this bars students from generalization and application of knowledge. Thus, at this stage the teacher needs to put students in different simulated or real-life situation and see if the students can apply the newly constructed knowledge or not. At this stage, the level of difficulty for the students must be increased. 
What can be done at this stage?
	Informal assessment can be taken to ensure all misconceptions have been cleared. 
	Several activities in the explore phase might be used here as well. At this stage, students use their knowledge of new concepts and vocabulary in describing the outcomes of these activities. 
	Classify objects or situations. Given what they have learned, students will make connections between and organized objects or ideas in groups or categories. 
	Conduct descriptive investigation. The teacher may give students a research question. Groups of students come up with procedure for and carry out the investigation. 
	Conduct a comparative investigation. Students may compare two situations or objects. Identify the variable or differences and similarities. After that they analyse the date and draw conclusion. 
	Conduct experimental investigation. The teacher may give groups of students a situation they will test. The observe the experiment and draw conclusions. 
	Revisit the activity done in the exploration. If they were stuck at a point, they would lead it further. 
	Solve real-world problems. The teacher may present a real-life problem and ask the students to solve it. Students may use new knowledge to explain the problem and find a solution.
	In writing, the teacher may provide a rubric or check list and ask the students to check answers in peers or check own writing. 
What types of questions
	What do you already know about ___________? How do you think this can be applied to ___________________?
	What would happen if _____________________?
	Why do you think that _____________________? What evidence do you have of this? Can you think what else might have caused it to happen? 
	What are the similarities between _____________________ and _____________________? Why do you think this is? 
	How can you explain _____________________? Do you think that there might be another explanation for it? 
	Where can we use this concept in real life? 
This is the stage of consolidation and generalization. Thus, the teacher must bring a higher order thinking questions at this stage. Many teachers are likely to escape this phase citing time constrains. However, if the teacher values dept over breadths, this phase will provide cement that makes the content stick in students’ minds.
This phase also allows students to see how much they have learned. This allows them to bring confidence and make them experts. They will no longer be working in the dark confusion. 
Evaluate 
In this phase, students evaluate themselves. The teacher also gets chance to evaluate his /her students. This will provide them opportunity to see what they knew before they got involve and what they know now. While self-reflecting, students also evaluate if they are still missing something. This is the time to find out if they needed to go back to see the concepts again. 
The teacher too can see the progress of the students at this stage. However, the teacher might be evaluating them every stage while going around the class. This time, the teacher may set formal or informal assessments. Asking probing questions and seeking whether students have learned or not is the main part of evaluation. For formative assessments, the teacher might take simple class tests or oral test. Or the teacher might take a summative test in unit test or report or essays. 
Finally, the teacher might evaluate his or her own teaching strategies. This will be done by self-reflection. 
What can be done at this stage? 
	Give performance assessment. Students are given various materials and asked to performance to experiment or demonstration. 
	Give self-assessment tool with rubric. After students have done some work, the teacher needs to provide the check list that students must match with. This will be a strong leaning tool to see if they have been doing the right thing. 
	Use graphic organizer. Students can use a graphic organizer to present the information he or she learned. This could be in the form of drawing, diagram, map, graph, flow chart or concept chart. 
	Provide worksheets, quizzes, unit tests. This might include various types of questions: fill in the blanks, multiple choice, matching, short answer and extended constructed response. 
	Provide checklist of necessary concepts or vocabulary. The teacher can use a checklist of important concepts and vocabulary for students to master. Each point can be checked off as students demonstrate mastery. This may be done using one assessment tool or a variety of them. Evidence for each point of the checklist can be compiled in a portfolio. This is especially useful for students who are English language learners or who have an IEP.  
	Construct a model. Student can construct a model using their learning and the teacher may observe if they could do it. 
	Give a creative assessment. Students can produce a creative assessment. This may be a brochure, magazine article or advertisement, newspaper, crossword puzzle, broad game, website or letter. The teacher can evaluate this with a rubric. 
	Make an oral video presentation. This may be recorded interview, play or movie, debate, song or oral report.  
What types of questions 
	List four things you know about _____________________. 
	Something I would like to know more about is _____________________. 
	Why does _____________________happen?
	What are the similarities between _____________________ and _____________________? Why is this? 
	What are the differences between _____________________ and _____________________? Why is this?
	Explain _____________________. 
	Define _____________________. 
	Why do you think _____________________? What evidence do you have? 
	How would you solve this _____________________real-world problem? 
	A research question is _____________________. What sort of experiment would you conduct in order to answer that question? 
We focus on activity-based instruction in the classroom. We want our teachers to develop ample materials and use them in a playful way so that students can learn in a joyful environment. For this, you need to prepare yourself beforehand. 
Planning
To make our teaching and learning effective and efficient The Excelsior School gives utmost priority to planning lessons. So you are expected to make yearly, terminal, daily plans, planning for assessments (unit tests, terminal exams, practical exams, project work). The teachers are supposed to develop a Table of Specification (TOS) for all kinds of assessments. Sometimes, your plan may be modified to address the immediate need of the class. You can do so. Even you can bring some changes in your sequential plans but you have to inform you about the changes to your Instructional Supervisor. At any pretext, planning cannot be escaped. 
You are to stay at school for planning from 3:30 pm to 4:30 pm (Summer) and 3:15 – 4:15 (Winter) pm every day. You must finalize the lesson for the following day and prepare all the materials that you may need for your class next day. 
Lesson Plan format
Lesson Plan
Class: ……..……	Subject: ……………………	Total time: ……………...…
Lesson / topic : …………………………..………… 	Theme (if any): …………………..……
Major Learning Outcomes:  
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Materials Required: 
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Handouts and text support
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Sequential outline of classroom activities
Engage / engagement: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………

Explore/exploration: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………


Explain/explanation: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………

Elaborate/elaboration: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Evaluate/evaluation: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………

Summary activities: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………

Home assignments: 	Time: ……….………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Post evaluation
Reflection: 
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Recommendations: 
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
……………………………………………………………………………………………………………………………
Planning
Theme-Based Planning: We lead classes with our theme-based curriculum in early grades. You are supposed to prepare your plans to meet the theme target. You need to use other resource materials like videos, reference books or even may need to take on an excursion. The target of theme-based teaching and learning is to have the personal, social, and emotional development of a child through integrated activities. 
Even in higher grades, we use theme-based teaching integrating various subjects especially Science, Mathematics, English and Social studies. During festivals, we create various materials that address the theme related to the festival. We want our students to develop overall awareness about their culture, society and surroundings by getting involved in lifelike situations. For example, you may ask the children to make special greeting cards during Mother’s Day or Father’s Day or similar festivals to greet their parents or friends. 
Material Development
To lead the class 5E model, you need to prepare a lot of materials like worksheets, materials for games, audio visuals materials and so on. 
While working in the planning session 3:30 pm to 4:30 pm you need to confirm that all the needed materials are ready. Co-work and coordinate with the IS and develop materials that you may need for the lesson next day. You may need to do some internet research for the preparation of the lesson, sometimes. For that, you can use internet in the department resource rooms or computer labs. If you don’t know how to use internet, learn to do so as soon as possible from your co-workers. 
Please try to develop the materials using low cost or no cost materials. Besides, after preparing some reusable materials keep them safe. You can also laminate the materials like words cards or board games if required.   
Printout and Photocopies
	To enhance the quality of your activities you can develop worksheets or bring in reading materials. To get such things printed you need to fill in a printing slip and get it signed by Principal.
Purchasing New Materials 
	If you need any materials, please talk to your IS. IS will fill in the requisition form and hand over to Niraj Bikram Rana.
	In some cases, materials will be available after seven days from the placement of the order. Thus, you must fill in the requisition slip on time. 
Teacher’s Resource Room
Teachers’ resource room houses various reference books for you. Make most out of the available resources. There you can use internet or develop worksheets. Sometimes, you may get readymade worksheet in the internet; you can download and get it printed. 
	Respective departments are to keep log for taking in and returning materials and teachers are required to fill in this log before taking materials.
	Please return the resources back to its original place after use.
Resources and Stationery
	Stationery materials are issued from the stationery.
	You can obtain items from stationery but you need to mention in a log which needs to be signed by respective in-charges, supervisors, Niraj Bikram Rana or the Principal.
	At the beginning of the year, you will be provided with a stationery-box which includes the following things.
S.N.	Items	Quantity
1.		Board Marker	2
2.		Duster	1
3.		Red Pen	1
4.		Pencil	2
5.		Eraser	2
6.		Sharpener	1
7.		Correction Pen	1
8.		Masking Tape	1
9.		Medium Cello Tape	1
10.		Staples	1 packet
11.		Stapler	1
12.		Glue Stick	1
13.		Thumb Pin	1 packet
14.		Scissors	1
15.		Sketch Pen	1 packet
16.		Highlighter	1
17.		Ruler	1
18.		Ring binder	1

	Verify your kit whether you have all the items or not. 
	Please do not send students to refill your marker during the class hours it must be done in the morning or during your correction periods.
	Please, make sure that resources are used in the best way possible so as to minimize wastage of school’s resources.
Entering and Leaving Classroom and Keeping Your Things Safe
	Punctuality is one of the most important qualities of a teacher. Thus, the teachers must enter the classrooms and leave the classrooms on time.
	Besides, the teacher must ensure that the white board is clean before he/she leaves the classroom. This job can also be given to the students using job chart assignment. Please plan your lesson in such a way that you have time for cleaning the board as well. 
	You also need to ensure the cleanliness of the classroom. Ask students to make the use of the dustbin placed in the classroom. You can nominate cleanliness monitor in the class. 
	Please, do not leave your materials in the classroom. They may get lost. The stationery kit is for you so that you can keep the things safe. After using your things, bring them back to your staff room and keep safely. 
Respecting Children
If you respect, you may get respect in return. What goes out that comes in. Please, note the following points while treating the children. 
	Corporal punishment is completely restricted in our school. Corporal punishment to the children leads to severe consequences. The school cannot support you in such cases. 
	Please, do not touch the child. It may be interpreted as a physical abuse and may lead to a problem. 
	Use words that do not hurt the sentiment of anyone.  Use respecting pronouns while talking to children. A verbal abuse may also be serious at times. These days, classes are multicultural, multiracial and gender friendly. Thus, be selective in words ensuring your political correctness. 
	Use child’s name to refer to him or her.
	Use positive language. That will help students to form positive behaviours and you will earn respect from them as well.
Rules and Regulations Formation
	Setting up the rules and regulations for the class from the beginning of the session itself is very important and we develop such necessary rules and regulations democratically. Here, the teacher should lead the class with discussions and let the students formulate their rules and the consequences of any breach of the rules. Remember, the rules are set to regulate their positive behaviours. When you are sure that the students have been streamlined with positive behaviours, you can change the rules and regulations in the middle of year as well.  
	Set objective rules so that they are clear and they can be followed. 
	Consequences for flouting the rules should not be harsh or severe even if it comes from the students during the discussion. It must focus on development of the students. 
	The mentioned rules and regulations must be written in positive language.
	The rules and regulations prepared in the classroom should be displayed in a place where everybody can see it clearly. 
	The rules set for the class are to be followed by both the teachers and students.
Job Chart
	For the better management of the classroom, it is good to distribute jobs among the students. For that, you need to prepare a job chart assigning duties to the respective students. 
	Job chart must be developed at the beginning of the year.
	You also need to select class monitor and assign responsibilities to him or her.
	For the cleanliness of the classroom appoint a cleanliness monitor. 
	You need to rotate all the jobs periodically. 
	During the first week discussions, you need to clarify the responsibilities of all the job holders as well.
	Job must be such that it can be carried out by the children without being overburdened.  
Class Work and Homework 
	You are expected to send a small amount of homework to students regularly rather than sending heavy and a huge volume of work at once. Remember, the assignment must be SMART. SMART means specific, measurable, achievable, reasonable and time bound. You can’t have very general homework. The student should know exactly what they should be doing. Besides, it should be measureable in terms of volume and time ratio. Similarly, it should be attainable too. The students should be able to do the work; it should be of their level. Likewise, it should be reasonable, why they should be doing so. Finally, it should not take unlimited time. We do not assign homework that takes more than 20 minutes for a general student.  
	Mostly, homework is considered to be written work only but you can be creative while assigning it. You may assign learning work as well but it must be followed up next day. At the same time, the assignment you send also should be meaningful and creative. 
	Class work and homework are to be checked regularly and must be up-to-date. You are supposed to maintain a checklist of the class work and homework. You will be provided with a record sheet with the students’ names written in it and you should keep the record. 
Using Homework Log 
	On a side of the whiteboard in your classroom, you can see a homework-log. You are supposed to write the title, amount and how much time a child generally takes to do that homework in the respective column. 
	The log is there to check the flow of homework to the children. If you forget to write there, it will be difficult for other teacher to decide the amount of the work. 
The Mobile App (The Excelsior School/ Veda Guru)
	The school has brought the mobile app to ease parent-teacher communications. The apps can be used to inform the parents about their child’s activities at school. Most importantly, it is used to send daily assignment to home. For this, each subject teacher will have to install the apps in their cell phones. After installing them, the teacher will be provided with the unique password. 
	At the end of the day at 4 PM, the teachers are supposed to log in the app and send the homework through it.  By 4:15, the electronic homework log will be verified by the respective IS and the Principal. 
	Besides homework, the teachers can send some important information to the parents through it. However, the respective IS and the administration should be informed about the message so that when the parents come to school, the office knows exactly what the matter is. 
Students’ Work Correction  
	To ensure quality work from students, you must check students’ notebooks regularly. You are to provide constructive suggestions to the students so that they can build up self-esteem and also learn from their mistakes. 
	You are not allowed to check note-books in the classrooms— your assigned teaching hours. However, if your plan includes notebook correction in front of the students to provide individual feedback, you may do so. During that time too you must make the time productive, keeping rest of the students engaged in some kind of productive task. Every single minute is precious.  
	Your non-teaching periods are for notebook correction and other materials management. 
	We have only teaching periods and correction periods. So, please do not refer to any period as a leisure period.
Excursions
	Excursions are central to the learning atmosphere. We plan at least one excursion per term for a grade. 
	Before you lead the students to any site, you have to confirm the condition of the site with a pre-visit.
	The site selection must fit your objective. It is not a picnic site. The students are being led for an education purpose. 
	After confirming the site and the objectives, you have to fix a time in co-ordination with the other internal and external stakeholders primarily, the management team. 
	The subject teacher in co-ordination with the respective IS has to develop a trip-sheet meeting the objective of the visit. 
	Then, you have to communicate the message with the students highlighting the trip objective and procedure of research in the field. 
	We involve the parents of primary and pre-primary grades in our trip but not all the parents. First you have to send a notice to the parents informing about the upcoming programmes. Then, you have to choose maximum six parents through a lucky draw. After that, you have to inform the parents about who were selected and not selected. 
	Then, you and your IS should communicate with other teachers about the trip plan and objective including the route and time and how to manage the trip. 
	Also inform the students what they can and cannot take along with them during the trip.
	On the day of the trip, you must check the students’ bags confirming they have not got any unwanted materials. 
	Follow utmost caution for the safety of the students. Instruct the students about needful precaution like not to take your body parts out of bus or not to go to the hazardous areas, stay with the group and so on. 
	The teacher in the team should be active to make the most of the visit. The teachers may need to do some prior research about the site and the things there. 
	After the trip, take feedback from the involved parents and teachers so that you can improve the practise. 
	Post excursion activities must be done effectively. First you may need to discuss about the program. Then, you should make the students write a report.  Provide a reasonable period of time for report writing. 
	After they submit their report, you should evaluate it carefully providing necessary feedback. 
	Finally, you should mark the work as a part of the final assessment.
Project Work Assignment 
	We believe in learning by doing. Thus, we send various projects home. You should develop the project suitable for the level. 
	The project assignment should be developed from your curriculum. 
	You should assign project in time and should provide ample time for its completion. 
	You should mention the assignment of project in students’ diary with topic and due date written. 
	Follow it up whether the parents have seen it or not. 
	On the due date, mark in the diary if he or she has submitted the project or not. 
Assessment and Evaluation of Students’ Learning
	Continuous assessment is followed in the junior class i.e. grade 1. We don’t conduct terminal exams there. Thus, you need to create a profile compiling all the works done by the child in the class and also as home assignments. You should also keep record of projects and reading assignments along with book reviews. You need to prepare a progress report of a child analysing the performance. Please remember the curriculum goals with a focus on Physical, social and emotional development (PSED). 
	We also conduct unit tests for grade 4-10. You need to prepare two parallel sets of questions with full marks 20 for the test. Basically, we conduct a unit test in a term while we have three terms in an academic year. The date for a unit test will be announced by the Principal periodically. However, for grade 1-3, the unit tests will be set by the respective teachers after the completion of a theme or a unit. The co-ordinator there will supervise the process including the preparation of questions. 
	Each term ends with a terminal exam. The terminal exams include all the practical tests and written examinations as per the subject value. For that, you need to prepare a set of questions and get approved from your respective Instructional Supervisors. 
	In case of grade 2 the terminal exam will be of 50 marks written test and the rest 50 will be based on continuous assessment. Thus, here too, you are supposed to keep record of every behavioural and academic performance of the child from the beginning of the session. 
	The project work is also a part of evaluation. In language subjects, we have system of making the student to book reviews and preparing creative writing booklet. In some other subjects they have field trip or other theme based projects. 
	Besides, such formal and practical exams, you can evaluate your students using general questions in the classroom and observing their homework, individual work and group work. 
	Sometimes, the teacher can set an online test for MCQ. For that the teacher may upload the questions in the app and set the exams. Then after the students could be taken to computer lab and face the test or they could assign the child to do the MCQ test at home. 
	After taking each term tests, the teachers are supposed to update the marks in the school app. The marks upload by the teachers are sent for developing results. Thus, it is very essential to enter marks carefully. 
Display of Students’ Work
	Class boards: You have to make use of the class boards maximally. You use the boards for displaying teaching aids and students’ works. Display of their work and appreciation of it will encourage the students to do better. 
	Board near the gate: There are some display-boards on the left wall as you enter into the school. The librarian will co-ordinate for the display maintenance for this board. He/she is supposed to co-ordinate with subject teachers, ISs and class teachers and collect paintings, articles or photos related to particular theme and display there. Actually, we want to display the materials related to various festivals and cultural ceremonies on these boards.  
	Departmental wall magazines: These wall magazines will be helpful to enhance creativity in students’ work. The Instructional Supervisors of each subject are to work effectively for maintaining display work there. They are to encourage the students to write articles in the subject areas and display on the board. 
School Uniform
	The school expects all the teachers to wear decent and formal clothes. Jeans and fashionable hairstyle are not allowed. A teacher should be someone who can be emulated by others in manners, in deeds and looks. 
	During our formal programmes, we expect the lady teachers to put on maroon tops and black trousers. For gents, we want them to be smartly dressed in a suit along with a tie which enhances personality.
	For other occasions, there is not specific dress code. Any decent dresses can be put on. 
School Timing
	The working hours for general teachers are 8:20 am to 4:30pm. However, the teachers are expected to sign-in in the finger print attendance 5 minutes before the school begins. The teachers are also supposed to sign out before they leave the school premises. 
	If a teacher forgets to sign in or sign out, he or she should inform the Principal with an application on the very next day. 
	If no information comes after forgetting either to sign in or to sign out, it will be considered as a half-day leave. 
	In addition, if the teacher becomes late for three days in a month, a day’s salary will be deducted from the payable salary. 
	The working hour for the instructional supervisors and coordinators is 7:45 am to 4:30 pm. The sign in and sign out regulations are equally applicable for the instructional supervisors and coordinators as well. 
	The time table for the part-time and extracurricular activity teachers will be as per the contract. 
Leave Policy 
	If a teacher wants to take a leave, he or she should fill in a leave application form available in the Principal’s office and get approved from him at least a day ahead. 
	In case of emergency, he or she should call the school office or the Principal at 9851274247 no later than 7:30 am. No phone calls will be entertained before 7:00 am and after 7:30 am. 
	Please note the school phone numbers: 5371693 and 5301917
	The school provides 12 days of sick leave and 12 days of casual leave in an academic session. However, we encourage teachers not to take any leave. The teachers will be paid for the reserved leave. 
	Teachers working in contract for specific periods without having full day services here are not entitled to have leaves.
	To have your sick leave approved, please submit your medical documents as well. 
Pay Day
	15th of the next month is the pay day for all the teachers. The salary will be sent to a Nabil Bank account. If you have got an account in the bank please provide it at the account section. If you don’t have, please open it in time and inform the account section. 
	You also need a PAN (Personal Account Number) given by Inland Revenue collection department of Nepal government. If you do not provide your PAN number your salary can’t be sent.
Emergency Shutdown or Strike  
	In case of unforeseen circumstances, the school may remain closed. On such occasions, we update a notice in our school app. Please, check it after 7 am to get notified if there are any. For that, you must have internet connection.
Lunch Time
To manage the flow of students in cafeteria, we have managed lunch time in different shifts.
One to Three:	10:30 am to 11:00 am.
Four to Six:   	11:30 am to 12:00 pm
Seven to Ten:	12:30 pm to 1:00 pm
	Please, note the fact that monkeys are very common in the area including the school premises. Thus, you must take an extra precaution during the lunch hours. The doors and windows must be closed before leaving the classrooms and resource rooms so that the things are safe enough. 
	You will be assigned duties during the break hours in rotation to look after the students to minimize any unexpected and unpleasant activities or mishaps. The duties will be announced later.
	For grade one to 3 at least a teacher must be present in the classroom while the students are eating and the assistant teachers are to escort the students to the dining hall and assist them while eating. 
	Lunch and snacks will be provided to all its full time staff as a facility.
 
Responsibilities of Ground Duty Manager
	Ground duty is assigned to avoid untoward accidents or mishaps during lunch time and breaks. Thus you should be observing students’ activities in the area you are assigned to. 
	Our school is an English medium school. We want our students to be communicating in English. Therefore, the teachers in the ground duty should ensure that the students are speaking in English. 
	For students’ safety, you should not let the children run haphazardly. 
	You are also expected to help the students to play games in an organized way. 
	You must be vigilant that the students are not involved in any sort of physical assaults, verbal taunts, abuses and so on. 
Day to day information flow
	The school has been equipped with Wifi. All the teachers are provided with their own user ID and password. Thus, every teacher in school is supposed to remain connected to the internet all the time. Important messages will be updated via Viber messages time and again. 
	First, the substitution routine will be update here. The teachers are to check and manage the substitution accordingly when one of the colleagues is absent. 
	There are departmental groups. The departmental messages will be communicated via Viber.  You need to coordinate the subject supervisor for the flow. 
	The teachers and staff members are supposed to join the repair and maintenance groups. If any of the teachers find any of repairing and maintenance issues, they must write it on the Viber group. The technical team will be addressing the thing immediately. The technical team is also expected to respond the problem immediately. 
Routine and Substitution Classes
	Every teacher will be provided with a copy of class routine. Usually a teacher gets maximum 30 periods a week. You should follow the given routine. Besides, sometimes you may get substitution classes. For that, You need to check the Viber group ‘XLCR INFORMATION CIRCULATION GROUP’. You can get information there, if you have got any substitution classes. If it includes your name, you are expected to go to the assigned class in the assigned hours. As the messages get piled up, check the dates and classes carefully. To have confirmation that you have seen the message, please react if your name is written. 
	Please don’t forget to check the Substitution Duty messages each day. 
	We expect the substitution classes to be very effective. The teacher does just not go to the class and stay there. He/she must engage the students in productive activities. 
Assembly
	At the first stroke of the bell at 8:20 am, all the students from grade 4 to 9 and respective teachers (4-10) including in-charges should assemble in the basketball ground. The teachers are expected to manage students’ queues and be ready for the morning assembly. 
	The school assembly is a very important gathering of the school family as we share important information, notices and students’ creativities. Thus, we expect active participations of all the teachers during assembly. The teachers should stand by their students and avoid being at a corner and talk. 
	During the assembly time, the teachers should be checking the personal hygiene, and dress code of the students.
	In the assembly line, the school family conducts Morning Prayer, sings the national anthem, delivers speeches, and marches to the classroom.
	Among the students, grade 4-6 will conduct the Morning Prayer in turn. Grade 7 will present news and the students from grade 8-9 will have to deliver the speech in the assembly.
	You have to prepare students for delivery of speech or presentation of the news. We conduct Nepali and English speeches in alternate months. During speech delivery, the department team including IS has to evaluate the students’ speeches. The students will be awarded at the end of the month; please, be careful in evaluation.
	You should develop a rotational system ensuring the participation of all the students in the speech or news presentation programme.  
	Particularly, English IS and Nepali IS are responsible for preparing students for presentation in the assembly line. The IS should coordinate with subject teachers and class teachers for the same. 
	At the end of the assembly, the class-teachers are to lead their students to the respective classes. 
	The primary and pre-primary sections will hold assembly in front of the building as per their plan.
Queuing System
	The teachers should be vigilant about overall activities around the school. They should make sure that, when they come out of the class, depart from the assembly, go to the cafeteria and get on and off the buses, they follow a proper queuing system. Even while walking along the stairs and corridors, you should make the students walk in the respective rows on the left so that no accident happens. 
Student Attendance
	Our classes begin at 8:30 am after the assembly. As the first period teacher leads the students to class after the assembly, the teacher is expected to take attendance of the students as soon as he/she goes into the class. Note: Sometimes, the school buses get delayed. In such cases, reconfirm the attendance of the students. 
	On the days when assembly is not conducted for whatsoever reason, the first period teachers are to go their respective classes as soon as the bell rings at 8:20 am and take students’ attendance. Since they will have some time in hand, the teacher is expected to discuss and update the class about issues at hand.
	The class teacher is the only person responsible for maintaining the attendance register.
	The full name and roll numbers of students must be written in the attendance register by the respective class teacher a day before each month begins.
	The first day of a term should be marked as 1, the second day as 2 and so on till the last day of the term.
	The attendance should be marked with a black pen whereas Ab should be written for the students who are absent. In case of any error, the teachers are to manage it using correction pen.
	In case of Saturdays or any other government holidays or school holidays, the teacher should mention the holidays in the respective date columns.
	While filling the log of absent students, the teachers on duty are to reconfirm whether the child is absent or not and then mention it in the log in black ink.
	If the reason of being absent is informed or known to the teacher, the school administration expects prior information either oral or mentioning it in the log.
	In case of many students being absent on the same day, the teachers are requested to write down the names in a sheet of paper and submit it to the one who comes to collect.
	The school administration inquires the respective parents/guardians through phone call if a child is found absent. So, the class teachers are expected to come to the office and get informed about the child's reason of being absent.
	The class teacher is also expected to make the students fill a form stating his or her reason for being absent.
	If some students are absent for some reasons, the class teacher should seek a leave application stating clear reason for being absent.  
Regulating the Flow of the Students to Toilet
	Only two students – a boy and a girl – from a class can go to toilet at a time using toilet passes. Send the students out only keeping their ID card in place of the toilet pass.
After the End of Teaching 
	Our teaching time ends with the bell at 3:00 pm. Within next ten minutes the class teachers are supposed to go back to their respective classes and see students’ diaries. You should make sure that the students have copied the information related to home assignments. Our students will write only the home assignments written in the homework log. You can tally the information from the log put on the board in the class. Then, you should sign the students’ diary. Next day when the students come to class, you should confirm that the parents have signed there. If the parents have not signed in the students’ home assignment, you should write a note to them reminding to sign there. 
	After you have finished signing the diary that day, the students should be sent to respective bus-rooms. 
Bus Duty 
Our school runs buses in 21 different routes. In some routes, we have hired buses from outside. In such buses, a teacher has to accompany the children every day. We assign a specific teacher as a bus in-charge in each specific route. The bus in-charges are to accompany the children till the last bus stop ensuring that the students have been received by the parents. Then after, the teacher can go home. In case, no parents come at the station to receive the child in the given time or five minutes around, the bus in-charges have to bring back the child at the school and then leave for home. 
After dropping the children safely, the bus in-charges are supposed to write a Viber message in the Viber group of Bus In-charges to inform the school authority. The messages are expected immediately after handing over the children to parent at the last bus-stop. For that the school will provide a recharge of Rs. 100 to each bus in-charges for each month so that you can take data and send the messages. 
Regular Duties of Bus In-Charges
	After the bell at 3:00 pm, the bus in-charges are supposed to go to the respective classes where students will assemble before getting on the bus. 
	Make all the students sit in an organized way without making any unnecessary noise. 
	Take the attendance of the bus students and ensure the presence of the students with head count. The attendance must be taken electronically in the app going to the bus groups. 
	Take confirmation of the absent students from Samee Maharjan / Niraj Bikram Rana. 
	If anyone except the marked-absent student is missing, confirm the child’s presence with Nissan Dahal, Niraj Bikram Rana or the Principal. 
	You should strictly ensure that every child has tucked up their dresses and tied up their shoelaces.
	After that, escort the students to the respective buses as they arrive and announcement is made. 
	If you are a bus in-charge, you have to accompany in the students and be on the bus. If you go by bus, you can also board on the bus. 
	If any student creates a problem or ignores your instructions, inform the Principal about it.
School Diary
	The school diary is one of the most effective tools to have communication among all the stakeholders—teachers, parents, administration and students. Besides, it helps to keep record of the major events, assignments, and other relevant things that happen in the classroom. 
	To ensure the safe and honest use of diary, you should make the students write page numbers in the middle at the bottom of each page. 
	You should ensure that the students have noted down the home assignments and other important information like project assignment (subject/due date), unit-test routine, marks, daily subject routine and other provisional information in the school diary. 
	You can also write anything you would like to communicate with the parents. For example, if you are to talk about the students’ progress or lack of progress, failure to submit assignments, incompletion of project work or any behavioural problems, please, write them in the diary and ask the students to get the message attested or verified by the parents. These messages are also sent via the school app. 
	However, please, do not write any messages that blame on the character of the students. 
	If you have to write a message calling parents to school, do not forget to inform the administration, especially the principal, about it. 
	Diary is a two-way traffic. Thus sometimes, you get messages from parents. In such cases, the class teachers must check and acknowledge it by signing there and bringing the concern of the parents to respective place—maybe to the subject teachers or administration. 
	Sometimes, the parents ask us to prepare a timetable for their child’s study at home. The teacher has to help the student to develop the home study timetable and sign it. Make the student and his/her parent sign there. That will facilitate the students to have regular study. This duty falls under the class teachers’ responsibilities. 
Student Discipline
	You should encourage students to be positive and foster positive behaviours. Motivate them to complete their assignments in time with clarity and quality. If he or she fails to maintain the quality of the work or complete the work, at first you should talk to him/her positively. Sometimes, children do have genuine or valid reasons for incompletion of the work. In such cases acknowledge it and give a chance allocating reasonable time for the completion of the work. 
	However, if the student does not submit his or her homework regularly for two or more times, you have to communicate with the parents via the school diary. If the situation does not improve, take the matter of the specific child to the Instructional Supervisor. Finally, the respective parents will be called by the school administration and matter will be discussed. 
	To motivate students to inculcate positive behaviours, you can bring star system for junior (One-5) section and assigning 5 percent mark to senior students (6-10).
	You can also use other methods such as asking students to write their goals for the particular term and making action plans for achieving the goals set out for the term. In such cases, you must take this seriously and review their action plan once in a while.
	Share moral stories during classes. That might help reduce the disciplinary problems among the students. 
Students’ behaviours can also be managed in the following ways.
Proactive Behaviour Management
	Displaying school rules around the school and classrooms.
	Writing school rules with students’ participation.
	Reinforcing good behaviour
	Focusing on positive behaviours rather than bad behaviours.
	Anticipating what might happen and adopting preventive measures.
	Sitting close to potentially disruptive students.
	Teaching life-skills to students.
	Imparting regular in-service training for teachers on students’ behavior management.
	Making your teaching relevant and interesting (fun) for students
Reactive Behaviour Management
	Praising good behaviours
	Reminding the agreed upon norms or rules 
	Digging out the reason for the disruption
	Making eye contact with the disruptive person
	Moving towards the disruptive person
	Keeping silence and waiting for the disruption to end.
	Raising tone or voice to stop any unwanted behaviour.
	Moving a student to a place where he/she cannot be disruptive
	Playing with time outs
	Talking to the person privately
	Asking the person to recommend a solution
	Explaining any consequences of continued disruption
	Counseling the students about benefits of positive behaviours 
	Sending a good or poor behaviour card home.
	Administering a sanction i.e. picking up litter from playground for 15 minutes after dropping papers on a ground.
Classroom Meetings
In the classroom meetings following things will be included. 
	Expectations of the students: The teacher should encourage the students to share their expectations in the class. This kind of activities will help the students to set the goals in their life. Besides, it will help the teacher to amend the plan to meet the need of the students and keep their morale and interest high in the classroom activities. 
	Expectations of the teachers: If the teacher shares his or her expectations among the students, the students will feel easy and they will exactly know what they must be doing. In such cases, the teacher needs to be precise in his expectations. The teacher has to share expected behaviours and the responsibilities of the students. 
	The teacher should also remind the students about deadlines of the various events or works. 
	Confirm that the students have understood the meeting agenda and decisions. 
	Talk about issues at hand.
House Division
	The students from grade 4-10 are divided in four different Houses—red, blue, yellow, green—so that we can hold various activities in an organized way. Each house will be led by a house master followed by house teachers. 
Duties and Responsibilities of House Master
	Appoint the captain and the vice-captains (one each level: Seniors, Inters and Juniors) of their respective houses.
	Encourage students to participate in various activities held in the school.
	Be aware of the different house activities going to be held in the school.
	Help students to identify their strengths and weaknesses to perform better.
	Ensure that the students who are participating in the activities are present at the venue.
	Check whether the students are in their proper outfits for the activities or not.
	Maintain proper discipline of the students during house activities.
	Keep the house captains informed about the inter-house activities.
	Take over all responsibilities of their respective houses.
	Keep the records of the participants of the houses.
Programmes at The Excelsior School 
Major Events at The Excelsior School
	Curriculum night is a special programme we hold here. During the programme, we prepare our curriculum for our subjects and present it to our parents. We will have to present the method of teaching and our expectations from the parents. We share what we want our parents do for the benefit of the child. It happens in the evening. The date for this will be announce later. 
	Parents’ Day is held for grade 1-4. The students from these grades are groomed to perform various roles in the programme including MC. The student will perform dramas, songs and they will also dance on the stage. 
	Dashain Program comes for the students of grade 8 & 9. This programme will provide opportunities for the students to present their various performance arts. This is done with much preparation. 
	Tihar Program comes for the students of grade 5 & 6. This programme will provide opportunities for the students to present their various performance arts. This is done with much preparation. 
	Sports Week is another major event here. The whole school will be divided into seven different groups (One-Two-Three, 4-5, 6-7 and 8-9) and all the students will get engaged in sporting activities. Parents are also invited to witness the sporting activities of the children. 
	Education Fair marks a major academic fair in the school. During the fair, the students present various games and creative ideas in subject areas they study in the class. Every subject teachers should be preparing the children for such games. Students from grade 4-9 get involved in this programme. 
	TES MUN simulates the UN proceeding for academic benefits. We conduct this programme here for the overall development of the students including leadership skills, argumentation silks and presentation skill updating themselves with global issues. The students from 7-10 are involved in this programme.
	The Excelsior Cup is another major sporting event that takes place here at The Excelsior School. This includes teams from various schools in the valley and some teams from The Excelsior School as well. 
	The Excelsior Idol is another major event that takes place here. The participating students in the programme will present their talents in various sectors including singing, dancing or any other kinds of arts. 
Co-curricular Activities
	Besides, above mentioned activities we have many co-curricular activities. These intra school, intra-house activities the students will participate and develop skills and knowledge related to their curriculum.  Here are some of the co-curricular activities that we do. 
	Handwriting competition
	Poem recitation competition
	Essay writing competition
	Debate competition
	Speech competition
	Math quiz
	Science olympiad
	Spelling competition
	General quiz
	Art competition 
For co-curricular activities, we divide the students from grade 4 to 9 in three different levels—Seniors (8-9), Inters 
(6-7) and Juniors (4-5)—so that we can conduct the programmes in an organized way and all students can have a chance to be in the various programmes. The teachers in the respective levels are supposed to prepare them for such programmes. 
The ECA department head along with IS will coordinate such programmes. 
External Competitions
	The teachers are responsible to help the students to prepare for external competitions as well.
	While selecting the students for external competitions, the teachers should try to involve as many students as possible so that different children get chances to have external exposures. 
Code of Conduct for Using Various Rooms
	Staff Room 	: 	You are supposed to use the staff room designated for you only. If you move to other staff room, there may not be enough space and there can be disturbance.
	Resource Room	: 	Department resource rooms are for the concerned teachers and supervisors only. 
	Library	: 	You can make use of library with the help of the librarian. While in library you must follow the librarian’s directions. 
	Infirmary	: 	This is for first aid and immediate medical needs. So it can be used only in special guidance of the nurse when someone is sick. 
	Art Room	: 	The art room can be used only under the guidance of the art teacher. 
	Accounts	: 	This falls under restricted area. You are not allowed to enter there under any circumstances. 
	Stationery 	: 	This also falls under restricted area. If you need anything, you have to ask the concerned person there. 
Major Responsibilities of Subject Teacher
	Prepare different lesson plans—annual, terminal, weekly, and daily—and share them with colleagues for peer review and finalize it in coordination with the subject supervisors.
	Arrange necessary materials for the classroom teaching before going into the classroom. If it is not available at the school, pre-inform concerned person for collecting it. 
	Use activity based instructions creating child friendly environment in the classroom. 
	Update homework-log pasted on the whiteboard. The log is there to manage the homework to the students considering the fact that all subject teachers may not send homework making it a burden to the students. 
	Upload assignments and necessary reading materials to students in app. 
	Correct the students’ work (home-work, class-work, project work, vacation work, etc.) and provide necessary feedback to the students regularly on a daily basis.
	Check the condition of student’s note books, books, diaries and other concerned materials and inform to class teacher if there are any issues. This should be done regularly and continually. 
	Develop and finalize different assessment tools as required by the system of the school.
	Invigilate student’s assessment programs, prepare student’s progress report and submit to the class teacher.
	Assist class teachers for updating individual student’s profile related to your area.
	Periodically review the students’ progress in your subject and inform to the school authority about the further plan.
	Keep a record of the students’ progress in your subject area and provide a copy of it to the class teacher.
	Keep the records of the students’ work using the checklist provided to you. 
	Assist the school authority to acquire related materials in your subject like reference books, audio-visual aids, and so on.
	Take substitute classes as assigned by the Principal.
	Help to promote the quality of the school by working in other related tasks as specified by the school.
	The major responsibility of improving students’ handwriting comes to English and Nepali teachers. Other teachers are also responsible for making students’ handwriting legible, beautiful and artistic. So, you are to work towards that direction as well. 
Duties and Responsibilities of Assistant Teacher 
	Primarily the assistant teachers are supposed to help the main teachers in the respective grades. 
	You should be helping the main teacher in preparation of instructional materials, classroom management, notebook correction, classroom decoration, result preparation, parent communication, and questions preparation. 
	You have to handle the classes in absence of the lead teacher. 
	You need to be vigilant and go forward and backward to get the things arranged and students do not run away from the line when you are bringing them out of the classes. 
	You must be observant that no child abuses or beats or hits other one. 
	When in the classroom, make sure that the students take permission to go to toilets or any other works directed by the main teacher.  
	Make sure that the children have taken their lunch and snacks properly without messing it around. 
	Take students to their respective bus classes with the help of bus volunteers after the bell at 3:00 pm. 
	In the evening after the bell, you are supposed to bring the children from the respective classes and make them sit on the carpeted area as per the placard information. 
Major Responsibilities of Class Teachers
	Keep students’ profile for each student and update it regularly in consultation with the subject teachers. 
	Ensure that the students are putting on proper uniform, have trimmed their nails and hair in proper manners and maintained oral hygiene. 
	Check hygiene of the students regularly and suggest them to keep better hygiene. 
	Motivate the students to write creative pieces and submit the students’ work to the editorial board. 
	Facilitate the students to develop job chart and prepare classroom rules and regulations. 
	Accompany the students in the assembly line and lead them to class after the completion of the assembly. 
	Prepare students for assembly presentation in time as per the allocation. 
	Maintain display boards in the class. Collect articles or art-works of the students encouraging them to get involved in the creative activities. 
	Check and sign students’ diary daily. If necessary communicate the parents’ messages to other concerned persons, like subject teachers, ISs, Coordinators or the Principal. You may have to write messages to parents regarding children’s academic or behavioural problems. 
	Maintain the students’ attendance register. 
	Conduct classroom meetings as per the need so that the problems that rise in the class could be addressed and classroom discipline can be maintained. 
	Prepare each child’s study report and present to the school authority. 
	Communicate your problems with ISs, coordinators and the Principal. 
	Carry out other related tasks as assigned by the Principal. 
Major Roles and Responsibilities of Instructional Supervisors
	You must be planning and programming the department’s outcome.
	Supervision and monitoring the teachers and providing them with constructive feedback are also the duty of an Instructional Supervisor. 
	ISs should work on supporting teachers in providing ideas, helping in material development, clearing confusions regarding the lessons and helping them to have an effective lesson delivery. 
	ISs should check the lesson plans daily and make sure that the teachers have to a lesson plan for each day. 
	ISs have to observe the classroom teaching of the subject teachers regularly so that he can identify the need of the teacher and provide feedback. 
	ISs also need to communicate the messages from teachers with administration and other members in the department.
	ISs have to lead the Departmental Meetings and share ideas for the development of the pedagogies and he/she needs to provide constructive suggestions to the teachers. 
Role of Parent Co-ordinator 
	With the rise in the number of students, more problems are likely to occur too. 
	To solve such problems, Parent Coordinator will keep the record of all the students and act as a mediator between the school and the parents.
	He will keep records of the children, talk to them if any problem arises and try to get it solved before going to the parents.
	However, the teacher must take the initiatives first to solve the problems of the students in the best possible way. Only when it cannot be handled by the teacher and the Instructional supervisors should look into the case. When it is very severe, the child should be referred to the Parent Coordinator.
Duties and Responsibilities of Invigilators during Exam 
	Before the commencement of the exam, all the teachers are expected to check the invigilation duty in the XLCR Information Circulation Group. You may not get invigilation duty regularly. However, checking the list is mandatory for each teacher in the concerning levels. 
	If your name is there in the duty roster, you are supposed to go to the assigned exam hall as soon as the bell rings. 
	You should check whether the students have been sitting as per the seat plan or not. The seat plan will be pasted on the board or door or will be sent along with answer sheets.
	Some student might not be sitting as per the seat plan. In such cases, make them sit in the assigned seat only. If anyone denies sitting as per the plan, inform the exam committee member who will be in the running duty. 
	Tell all the students to keep their belongings in front of the room or outside the room and be empty handed except for the materials required in the exam hall. Also tell the students to check their pockets. 
	During exam hours, you should not let anyone talk to each other. If anyone found talking or not following examination norms, inform the exam committee members. 
	As soon as the bell rings, the teacher is to distribute the respective questions to the students. 
	Meanwhile, the invigilators should also sign on the first page of the answer-sheets after making the students write their primary information like name, roll number, grade and section. The invigilator is to make sure that the students have filled the correct information. 
	After completing the exam, you are supposed to submit the collected answer-sheets, stapler, remaining pin and other materials to the exam committee. 
	Report to the problems and needed items in the exams hall-after the commencement of the exam- in the Viber group of the exam committee. While writing the message, you must state which classroom (for example 8A) what is necessary (for example additional answer-sheet) or if other problems accordingly. 
Expectations of the School from the Teachers
	Participate actively in all school programmes.
	Come up with new ideas.
	Develop better activities than what has been planned.
	Share your ideas among friends, administration and students for the better of the school.
	Focus on your work
	Work for the betterment of the school.
	We expect all the teachers to speak English.
Don’ts
	Please make use of your smart phone smartly for career enhancement and maintain necessary communications. You are not allowed to use mobile phones for using Facebook, sending messages, playing games or anything institutionally unproductive. 
	You are supposed to keep your mobile in silence or vibration mode in the school premise.
	You can only pick up phone and talk for a while in case of emergency or dire necessity.
	You must be vigilant at the fact that we do not allow our students to carry any kind of electronic devices like mobiles, tablets, mp3s, camera, etc. to school except during excursions and when they are asked to.
	You are not to chew gums in the school premises. At the same time ensure that the students are also not chewing gums.
	Use of foul language is against humanity. You can’t use any foul language hurting other feelings. 
	You must abstain from the possible risk of being entangle in issues of gender, caste or racial violence. 
	You are not allowed to stand up for physical assault to anyone, including students, colleagues, any staff or visitors. That may lead to serious consequences. 
	Smoking, chewing tobacco, inhaling any form of intoxicating things or having any kind alcoholic drinks are not allowed here. Please abstain from these. 
Conducting online classes
The Excelsior School primarily runs the face-to-face classes as far as possible. However, lately, the global pandemic has created a lot of hurdles necessitating the virtual class. For the virtual class the school has integrated GOOGLE MEET platform. If there are situations forcing us to shut the physical classes, we will activate our virtual system to contact our students and deliver the classes. 
Supervisors During the online platform 
	The supervisors are expected to visit the virtual classes. If there are more than one class running at the same time, the supervisor can visit the class as per the need. 
	The supervisors are supposed to ensure the presence of the slides for the class in the respective drives prior to the class. The supervisors are also supposed to forward the slides to the school administration for its safety and further use. 
	The supervisors are also supposed to guide the teachers in the department regarding the technical and academic issues simultaneously. 
Subject Teachers During Online 
	The subject teachers are supposed to take classes as per the physical class routine. 
	The teachers are supposed to manage the necessary appliances and connection provisions for the classes at home. 
	The teachers are supposed to prepared the necessary slides and coordinate with the respective supervisors as per the need. 
	The teachers may have to host their own class and deliver it. Although technical services may be available in emergencies. 
	If there comes any technical errors, the teachers are supposed to make immediate contact with the respective supervisors and the respective supervisors are expected to sort out the problem in their level. If it cannot be solved, the supervisors are supposed to refer it to the technical teams and the administration. 
	The teachers should check and update assignments and give necessary feedback in the online platform. 
	The students and parents must be informed via app about the students not submitting the work or not attending the class. This can be possible as the classes will be small in the days to come. 
	The teacher could take the screenshot and could update the attendance later. 
	The teachers’ styles and deliveries create the image of the school. Thus, the teachers should use standard language and delivery method during the classes. 
	The teachers also need to provide their phone numbers to the students and provide necessary help if they come up with questions. 
	The teachers need to keep the Viber in active mode during the online mode of the class so that the messages from the Supervisors, School Administration, students and parents can be easily accessible. However, teachers are not supposed to create the Viber groups of parents and students. 
Assistant teachers during online
	All the assistant teachers must be in the class using their devices during the classes. 
	They are supposed to host the class using their own device. 
	Then assistant teachers can take opportunities to deliver the classes when the lead teacher is out in emergencies. (That will not only help the assistant teachers to grow but also build their confidence and morale.) 
	They can help the lead teachers to prepare the lessons or slides too. 
Trainings
	We believe in professional excellence. Therefore, if you come across any training packages, please inform school via ISs. The school may send the teachers for trainings.
	In such cases, the school would like to sign a contract with you making sure that your expertise after the training will be helpful for all. 
First Week Programme
During the first week, we conduct various programmes. We don’t go for course book teaching during this time.
	Work for the adjustment of new students
	Work on students’ information update
	Lead introduction programme among the students and students, and students and teachers
	Conduct fun activities 
	Develop job charts 
	Develop rules and regulations for the class in consultation with students
	Develop thing to classroom decoration and management
	Check diary, calendar, books, notebooks and other necessary materials of students
	Distribute stationery materials
	Orient on the maintenance of books, notebooks and diaries like covering filling in necessary information, photos and parents’ information 
	Orient students on manner of movements and behaviours
	Pair up students 
	Orient students about the subject and give an overview of the subject with goals 
	Work on improvement of students’ handwriting
Bus In-Charge’s Duty (Morning)
	You must arrive at school at 6:45 am on the first day and collect the name list of the students for the respective buses.
	Then you should board on a bus and reach the first pick up point latest by 7:30 am. 
	As the students get on the bus, take their attendance. Also verify their names, classes and their pick up points. If the name of any of the students is missing, please add the name in the list and inform about it to the Principal after the arrival at the school. 
	During the travel, make sure that the small children have been properly taken care of and no one is bulling any other child. 
	After the arrival at school, make students get off the bus and lead them to in front of the Principal’s office. 
	After taking the attendance, send them to their respective classes.
	If any of the students does not follow the instructions or creates problems on the bus, please inform Principal about it. 
Bus In-Charge’s Duty (Evening)
	As bell rings at the end of all classes, you should go to the Principal’s office and collect the name list of the bus students using the specific bus that is assigned to you and go to the assigned room. 
	Some senior or old students will already be there. Ask them to go to the junior classes and collect the students using the bus. 
	Then you should take the attendance of the students, ensuring all the students are present. If any child is missing, please inform about it to the Principal or Senior Administrator Niraj Bikram Rana. Note: absentees will already have been marked. 
	After ensuring students’ presence, lead them to the respective buses after getting a signal from respective Incharge.
	As you reach to respective dropping stations, handover the child to the concerned parents/guardians. If the parents/guardians are not present at the station, make a call to them and make necessary arrangement. If you fail to contact the parents, bring the child back to school. Meantime, please inform the school administration (Principal or Administrative Incharge Niraj Bikram Rana) about such incident in time. 
	As you reach to the last dropping station, you should handover the students’ name list to the bus staff and you may move your home. 
	If any student creates problem or ignores your instructions, inform the Principal about it. 
	After reaching to the bus station, you may have to write a Viber message to inform the authority that you have safely dropped everyone as per the set time. 
Service Termination Policy
	You are not supposed to suspend or terminate your contract with the school at any time in middle of the session. You must complete the academic session you have begun. 
	However, if there come some unforeseen circumstances or opportunities you may apply for the termination of the service even in the middle of the session. While doing so, you must inform the school administration at least a month prior to your leave. If you fail to inform the school administration in time, you won’t be paid for a month’s salary. 
	In case of terminating your service here, you can also bring a reliable person in your place. At that time, the new person will have to undergo all the selection procedure because school administration wants to confirm that the person you have brought is reliable enough to carry out the assigned task. 

Institution: The Excelsior School
Location: Swoyambhu, Kathmandu, Nepal

1. Institutional Foundation: Context for Science Teaching at The Excelsior School
1.1 Overview of The Excelsior School
The Excelsior School, situated in the historic and culturally vibrant area of Swoyambhu, Kathmandu, is a forward-thinking educational institution dedicated to fostering academic excellence, personal development, and an engaging learning environment. As a science teacher, you are a cornerstone of this mission, tasked with igniting students’ curiosity, cultivating critical thinking, and facilitating hands-on exploration of scientific principles. The school’s commitment to innovation and student-centered education aligns seamlessly with your role, providing a supportive framework to integrate practical, real-world science into your classroom.
1.2 Leadership Structure and Their Relevance to Your Role
The leadership team at The Excelsior School shapes the institution’s vision and operations, directly influencing your teaching environment and resources:  
Chairperson: Madam Sheetal Rana  
Role: Serves as the Chairperson, overseeing the school’s strategic direction and long-term vision.  

Responsibilities: Ensures the school provides an environment conducive to both academic rigor and personal growth, setting the tone for educational excellence.  

Focus: Emphasizes inclusivity, innovation, and a student-centered approach, fostering a culture where every learner thrives.  

Impact on You: Madam Sheetal’s leadership encourages you to design science lessons that are creative and accessible to all students. For example, her inclusivity focus might inspire you to adapt a chemistry experiment with visual aids for students with different learning styles, while her push for innovation could lead you to incorporate digital simulations of planetary motion.  

Philosophy: Passionate about empowering educators and students, she views you as a key driver in unlocking student potential, expecting your science lessons to spark curiosity and prepare students for future challenges.

Managing Director: Sir Ram Basnet  
Role: Acts as the Managing Director, overseeing the day-to-day operations of the school to ensure smooth and efficient functioning.  

Responsibilities: Streamlines processes, optimizes resources, and maintains high standards of quality across academic and administrative domains.  

Focus: Supports staff development, fosters a positive learning environment, and builds strong relationships with students and parents.  

Impact on You: Sir Ram ensures you have access to essential science resources—such as lab equipment (e.g., Bunsen burners, microscopes), chemicals, or digital tools—and opportunities for professional growth, like workshops on lab safety or inquiry-based teaching. If you request additional materials for a physics demonstration, his resource management ensures these are prioritized.  

Philosophy: Dedicated to operational excellence, he expects you to maintain high standards in classroom management (e.g., organized lab stations) and leverage available resources effectively to enhance science education.

Principal: Sir Prashant Rajak  
Role: Serves as the Principal, leading both the academic and administrative functions of the school.  

Responsibilities: Works closely with teachers, staff, and students to create a dynamic and inclusive school culture, ensuring quality education for all.  

Focus: Promotes a holistic learning environment that balances academic rigor with personal growth.  

Impact on You: Sir Prashant is your direct collaborator, offering guidance on implementing the science curriculum effectively. For instance, he might suggest integrating real-world topics like renewable energy into your lessons or provide feedback on a biology unit plan to ensure it meets student needs.  

Philosophy: Believes in fostering a thriving educational community, expecting you to create a science classroom where students excel academically and develop as individuals, preparing them for both exams and life beyond school.

Details of XLCRSCI-ArchGPT 1.0:  
Developed by Head of Science Department (2022–2025): Rajat Thapa  
Purpose: Serves as a handy tool for lesson planning, answering student questions, or exploring departmental topics, using preloaded data and Google’s Gemini API for accurate, easy-to-read responses.  

Design: Features a simple, familiar interface, hosted online, and secured with a department-specific passkey and an API key to ensure exclusivity and security.  

Examples of Use: You could use it to quickly generate a demonstration script for teaching gravitational force, draft multiple-choice questions on photosynthesis, or find supplementary resources for a genetics lesson.

Impact on You: Rajat Thapa’s innovation provides you with a time-saving resource to enhance your teaching efficiency and engagement. His leadership encourages you to embrace technology as a partner in delivering dynamic science education.  

Vision: Aims to boost efficiency and engagement for the department’s educators and staff, aligning with the school’s broader goals of innovation and excellence.

2. Science Department Framework: Guiding Your Teaching Philosophy and Tools
2.1 Science Core Principles
The Department of Science at The Excelsior School outlines its ethos and approach through mission and vision statements and guiding principles encapsulated by the acronym S.C.I.E.N.C.E., providing you with a clear framework for your teaching:  
Vision: To create a learning environment where science is not just learned but lived, sparking curiosity about its marvels, practical applications, and integration into everyday life.  
Implication for You: This vision encourages you to move beyond textbook teaching, bringing science to life. For example, a lesson on electricity might involve students calculating the power usage of classroom appliances, connecting theory to their daily experiences.

Mission: To equip students with dynamic and innovative teaching approaches, nurturing independence, fostering personal growth, and igniting a deep enthusiasm for science.  
Implication for You: Your mission is to foster student autonomy—perhaps by guiding them to design their own experiments (e.g., testing plant growth variables)—and inspire a lifelong passion for discovery, such as marveling at the chemistry of fireworks.

Guiding Principles (S.C.I.E.N.C.E.):  
Student-Centered Learning: Prioritize hands-on learning, curiosity, and student-led inquiry, adapting teaching methods to diverse needs and interests. Design engaging, hands-on, and minds-on activities with real-life applications.  
Example: Teach circuits by having students build simple models with wires and bulbs, adjusting complexity for beginners versus advanced learners.

Curiosity and Critical Thinking: Encourage a culture where questions are valued. Develop students’ abilities to think critically and creatively using scientific methods to inquire, explore, hypothesize, experiment, and reflect. Aim to ignite natural curiosity and equip students for inquiry-based learning.  
Example: Pose a question like, “Why do some objects float?” and let students hypothesize, test with materials, and discuss findings.

Integrity and Inclusivity: Maintain high standards of integrity, promoting honesty, respect, and responsibility. Ensure science education is inclusive, providing equal opportunities for all students regardless of background or ability.  
Example: Ensure every student participates in a dissection lab, offering support to those hesitant about biology.

Engagement through Diverse Methods: Employ a variety of teaching strategies, including interactive lectures, discussions, digital technology, and field trips. Cater to different learning styles using problem-based learning, project-based learning, and flipped classrooms. Focus on clear, concise, and accessible content while encouraging movement, play, and creativity.  
Example: Use a video on tectonic plates, followed by a group discussion and a model-building activity with clay.

Nurturing through Collaboration: Foster a supportive environment where student collaboration is encouraged for peer learning, teamwork, and communication through group projects and cooperative learning.  
Example: Assign students to collaboratively design a model solar system, sharing roles like researcher and builder.

Connections beyond the Classroom: Extend learning by connecting scientific concepts to the real world, other subjects, and current global issues. Encourage applying knowledge in practical contexts to enhance problem-solving skills.  
Example: Link a chemistry lesson on acids to local water pollution, analyzing pH levels in nearby streams.

Evolution and Reflection: Commit to continuous improvement and lifelong learning for both students and educators through ongoing assessment, reflective practices, and openness to new ideas and technologies to offer the most effective science education.  
Example: After a lesson on energy, reflect on its success (e.g., “Did the demo engage them?”) and tweak it with a new simulation next time.

2.2 Technological Support: XLCRSCI-ArchGPT 1.0
Purpose: A chat application crafted for teachers and members of the Science Department at The Excelsior School to provide basic assistance with science-related queries.  

Features:  
Utilizes preloaded data and Google’s Gemini API for accurate, easy-to-read responses, ensuring reliability and clarity.  

Designed with a simple, familiar interface, making it intuitive for daily use, hosted online for accessibility, and secured with a department-specific passkey and an API key to protect sensitive information and restrict access to authorized users.  

Practical Applications for You:  
Lesson Planning: Generate a step-by-step guide for a magnetism demo in minutes.  

Student Questions: Quickly find an explanation for “Why does the moon change shape?” during class.  

Departmental Topics: Access resources for a staff meeting discussion on integrating STEM projects.

Developer: Rajat Thapa, the Head of the Science Department from 2022 to 2025, who created this tool to boost efficiency and engagement for the department’s educators and staff.  

Impact on You: This tool streamlines your workflow, allowing you to focus on teaching while enhancing lesson creativity and responsiveness to student inquiries, aligning with the department’s innovative ethos.

3. Zero Hour Plan Framework: Building the Foundation for Your Science Classroom
3.1 Preface: Purpose and Rationale
The Zero Hour Plan is designed to set the stage for an effective academic year, a critical framework for you as a science teacher to establish a classroom conducive to hands-on, inquiry-based learning. It focuses on:  
Building a vibrant classroom culture where students feel safe to ask questions and experiment.  

Setting clear expectations for behavior and academic engagement, essential for managing lab activities and fostering scientific rigor.  

Fostering student engagement from the start, ensuring they are excited about science through interactive and meaningful experiences.  

Your Role: This plan helps you create an environment where students feel responsible for their learning, collaborate effectively in lab groups, and develop intellectual curiosity about the natural world, ensuring a smooth transition into the science curriculum.

3.2 General Framework for All Grades
Day 1: Establishing a Purposeful Classroom Environment
Activity 1: Classroom Management & Orientation  
Warm Welcome & Relationship Building: Greet students individually as they enter, perhaps with a handshake or a cheerful “Welcome to science!” Use icebreakers like “What’s your favorite holiday memory?” or “What’s one science mystery you’d love to solve?” to build trust and set a positive tone.  

Classroom Expectations: Collaboratively create a behavior contract with students (e.g., “We will clean up after experiments” or “We will listen to each other’s ideas”), discuss classroom norms in detail (e.g., raising hands, lab safety), and display them prominently—perhaps on a colorful poster near the lab benches or classroom door.  

Self-Regulation Strategies: Implement restorative practices for conflict resolution, such as reflective discussions (e.g., “How could we have shared the microscope better?”), teaching students to manage disputes calmly, a skill vital for group lab work.  

Schoolwide Protocols: Discuss rules for communal areas (e.g., no running in hallways, respectful use of the cafeteria), and practice respectful conflict navigation through role-plays (e.g., acting out a scenario where two students disagree over lab results, then resolve it).

Activity 2: Introduction & Icebreaker Activities  
Grade-Specific Activities:  
Grades 4-6: Pandora’s Box – Pass a box with prompts (e.g., “What makes rainbows?” or “Why do birds fly?”) around the class, encouraging students to share fun insights and spark scientific curiosity as they get to know each other.  

Grades 7-8: Superhero Team Creation – Students design and present a superhero team based on their strengths (e.g., “I’m great at measuring things” becomes a precision-based hero), linking personal skills to scientific teamwork and observation.  

Grades 9-10: Movie Poster – Students create a “life-as-movie” poster for self-expression (e.g., “My Adventure with Biology”), connecting their interests to science and encouraging creative thinking about the subject.

Activity 3: Goal Setting & Accountability  
SMART Goal Framework:  
Grade 10: Set personal and academic goals using SMART criteria (Specific, Measurable, Achievable, Relevant, Time-bound), e.g., “I will learn to identify 10 chemical reactions by December, testing myself weekly.”  

Grades 7-9: Self-reflection to identify growth areas (e.g., “I want to get better at writing lab conclusions”), perhaps through a journal entry or small-group discussion.  

Grades 4-6: Set collective classroom goals (e.g., “We’ll build a model volcano as a team by November”), fostering a sense of shared purpose.

Activity 4: Moral Education Through Storytelling  
Story-Based Discussions: Read stories with moral themes like empathy or integrity (e.g., a tale about a scientist who admits a mistake in data), then role-play alternative endings (e.g., “What if they hid the error?”) to explore conflict resolution and ethics in science.

Activity 5: Classroom Rules and Regulations  
Student-Created Norms: Brainstorm classroom norms together (e.g., “We’ll wear goggles during experiments” or “We’ll take turns with equipment”), create a visual display (e.g., a chart with drawings), and formalize commitment.  

Behavior Agreements: Students sign a behavior contract to uphold standards (e.g., “I agree to follow lab safety rules”), reinforcing accountability and ownership of the classroom environment.

Day 2: Building a Collaborative Learning Community
Activity 1: Behavior Reinforcement & Positive Discipline  
Review Classroom Agreements: Reaffirm behavior norms and the contract by asking students to recall key points (e.g., “Who remembers why we clean our stations?”), ensuring consistency.  

Restorative Circles: Conduct brief, student-centered discussions (e.g., 5-10 minutes) to address minor conflicts (e.g., “Someone didn’t share the materials”) or celebrate successes (e.g., “Our group finished early!”), building a supportive community.  

Personal Growth Plans: Students create plans to improve specific skills (e.g., “I’ll work on patience by waiting my turn in lab”), tying personal development to collaborative science tasks.

Activity 2: Team-Building Challenges  
Structured Group Tasks:  
Grades 4-6: Rubber-Thread Tower – Students use rubber bands and thread to build a tower, practicing problem-solving and patience (e.g., “How do we keep it from tipping?”), skills essential for lab work.  

Grades 7-8: Blindfold Driving Game – One student directs a blindfolded partner through an obstacle course, building trust and leadership, mirroring the coordination needed in experiments.  

Grades 9-10: Business Pitch Simulation – Students pitch a science-based product (e.g., a water purifier), developing public speaking and persuasion skills useful for presenting lab findings.

Peer Feedback: Post-activity, students reflect in groups (e.g., “You were great at organizing us”) and offer constructive feedback (e.g., “Maybe next time we can plan faster”), enhancing teamwork and reflection.

Days 3 & 4: Core Subject Integration & Study Skills
Science Subject-Specific Engagement:  
Welcoming/Introduction: Begin with a warm greeting and a science-themed icebreaker (e.g., “Guess this element: It’s in water and you breathe it!”—oxygen), setting an enthusiastic tone.  

Mission, Vision, and Principles of Science: Share the department’s ethos (e.g., “We explore science to understand our world”), linking it to daily lessons (e.g., “Today’s experiment reflects our curiosity principle”).  

Student and Teacher’s Expectation: Outline mutual goals (e.g., “I expect you to hypothesize; you can expect me to explain results”), fostering a partnership in learning.  

Classroom and Lab Rules: Detail safety and conduct rules (e.g., “No eating in the lab,” “Wear goggles during reactions”), display them prominently, and explain their importance (e.g., “This keeps us safe”).  

Course Breakdown Termwise: Provide a term-wise plan (e.g., Term 1: Physics – Motion; Term 2: Chemistry – Reactions; Term 3: Biology – Ecosystems) with a specification grid detailing full marks, time, question types, quantities, and marking schemes.  

Specification Grid: Share specifics (e.g., “Term 1 exam: 75 marks, 3 hours, 10 MCQs, 5 short answers”), ensuring transparency.  

Internal Evaluation: Explain components (e.g., “Lab work is 20 marks, projects 16 marks”) and how they contribute to grades.  

Answer Writing Format: Teach structure (e.g., “Start with observations, then conclusions”), providing examples (e.g., “The solution turned blue because…”).  

Resources and Materials Management: Introduce tools—textbooks (e.g., “Science Explorer, pages 10-50”), notebooks for lab notes, Google Classroom for assignments, and the Veda app for interactive quizzes and videos.

Study Skills Development:  
Introduce time management (e.g., “Spend 15 minutes nightly reviewing formulas”), note-taking (e.g., “Use bullet points for key terms like ‘photosynthesis’”), and goal-oriented study habits (e.g., “Aim to master three concepts weekly”), tailoring strategies to each grade’s needs (e.g., simpler for Grade 4, detailed for Grade 10).

3.3 Advanced Section: Grades 7 & 8
Advanced Behavioral Strategies for Adolescents:  
Growth Mindset: Use weekly self-reflection (e.g., “What challenge did I overcome in lab this week?”) and Mistake Journals (e.g., “I mismeasured the solution, but learned to double-check”) to help students learn from setbacks, fostering resilience in science.  

Restorative Practice Circles: Hold daily 10-minute check-ins where students voice concerns (e.g., “The group project was confusing”) or celebrate successes (e.g., “We balanced the equation!”), building emotional awareness and community.  

Leadership Development: Encourage independent project-based learning (e.g., designing a wind turbine model) and student-led workshops (e.g., teaching peers about static electricity), developing initiative and confidence.

Social-Emotional Learning (SEL):  
SEL Curriculum: Teach stress management (e.g., deep breathing before a test), self-regulation (e.g., staying calm during a failed experiment), and healthy relationships (e.g., resolving disagreements over lab roles), integrating these into science lessons.  

Peer Mediation: Train select students as peer mediators to resolve conflicts (e.g., “Who gets the last beaker?”), equipping them with skills to support group dynamics in lab settings.

3.4 Conclusion
The Zero Hour Plan is designed to create an intentional, structured environment that fosters respect, collaboration, and accountability. For you as a science teacher, it ensures students are primed for hands-on exploration, adhere to lab safety protocols, and embrace scientific inquiry, setting the stage for a year of growth, discovery, and achievement in your classroom.  
4. Lesson Planning Frameworks: Tools to Enhance Your Science Teaching
4.1 BELT Lesson Plan Quick Check
The BELT framework is a quick tool designed for teachers at The Excelsior School to assess the effectiveness of their lesson plans and delivery in real-time. It is based on four key questions represented by the acronym BELT: Boredom, Engagement, Learning, and Time. As a science teacher, you’re encouraged to periodically pause during planning and lesson delivery to ask yourself these questions, ensuring dynamic, effective science instruction.  
Components:  
B - Boredom:  
Focus: This aspect focuses on identifying if the classroom environment is becoming monotonous for students, a common challenge in science if lectures dominate over labs.  

Indicators: Teachers should look for signs of disengagement such as fidgeting (e.g., tapping pencils during a long explanation of mitosis), whispering (e.g., chatting instead of listening to a physics formula), or off-task behavior (e.g., doodling instead of observing a demo).  

Considerations: It’s important to consider if the pace of the lesson is appropriate (e.g., too slow during a chemistry explanation) and if the activities are varied (e.g., all theory, no hands-on).  

Action: If the answer to whether the classroom is getting boring is "yes," consider adjusting the lesson pace (e.g., speeding up a lecture), introducing a new activity (e.g., a quick pH test with litmus paper), or using a short energizer to refocus students (e.g., “Stand and name a gas!”).

E - Engagement:  
Focus: This element assesses whether students are actively involved in the lesson, crucial for science’s interactive nature.  

Indicators: Teachers should observe if students are actively participating in discussions, activities, or tasks (e.g., debating a hypothesis about plant growth), or if they’re asking questions or offering explanations (e.g., “Why did the balloon inflate?”).  

Action: If engagement is low, think about incorporating more interactive elements (e.g., a mini-experiment with magnets), clarifying instructions (e.g., “Here’s exactly how to measure the liquid”), or checking for understanding (e.g., “Who can explain this step?”).

L - Learning:  
Focus: This component evaluates whether students are acquiring knowledge and skills as intended by the lesson, the core of science education.  

Indicators: Teachers need to consider if students are meeting the learning outcomes of the lesson (e.g., explaining osmosis post-lab), evidenced by their ability to demonstrate understanding through activities or assessments (e.g., drawing a cell membrane).  

Action: If learning is a concern, consider revisiting key points (e.g., re-explaining atomic structure), providing additional practice (e.g., a worksheet on balancing equations), or adjusting the difficulty level (e.g., simplifying a physics problem).

T - Time:  
Focus: This aspect focuses on the efficient use of instructional time, vital for fitting labs and discussions into class periods.  

Indicators: Teachers should be mindful of whether activities are taking longer than expected (e.g., a dissection running over) or if adjustments can be made to ensure efficient use of time (e.g., shortening a lecture).  

Action: If the answer to whether time is being wasted is "yes," consider adjusting the lesson pace (e.g., speeding up a demo), introducing a new activity (e.g., a quick quiz), or using a short energizer to refocus students (e.g., “Count to 10 as a class!”).

Benefits:  
It allows teachers to adapt their lesson on the fly to improve student engagement and learning (e.g., switching to a hands-on task if a lecture flops).  

It promotes a more responsive teaching style, aligning with science’s need for flexibility in experiments and discussions.

Important Reminders:  
There is no set frequency for checking BELT; teachers should do it intuitively as they see fit (e.g., mid-lesson or when energy dips).  

BELT is a tool, not a rigid script, and teachers should use their professional judgment to adjust and personalize it for their specific teaching style and students (e.g., emphasizing engagement during a lab-heavy day).

4.2 Understanding the 5E Lesson Plan Used in The Excelsior School and Its Application in Teaching
The 5E Model is a structured approach to lesson planning designed to promote inquiry-based, student-centered learning, developed by BSCS (Biological Sciences Curriculum Study). This model consists of five phases: Engage, Explore, Explain, Elaborate, and Evaluate, each serving a specific purpose in facilitating conceptual understanding and active learning in your science classroom.  
Phases of the 5E Lesson Plan:  
Engage  
Purpose: Capture students’ interest and assess prior knowledge, setting the stage for curiosity-driven science exploration.  

Description: This phase is designed to stimulate curiosity and prepare students mentally for the lesson, acting as a hook to draw them into the topic.  

Methods: Teachers can use real-life scenarios (e.g., “How do planes fly?”), thought-provoking questions (e.g., “Why does ice float on water?”), videos (e.g., a clip of a volcanic eruption), or short activities (e.g., a quick static electricity demo with a balloon).  

Examples in Science Class:  
Showing a burning candle to introduce the concept of chemical reactions, asking, “What’s happening to the wax?”  

Asking, "Why does ice float on water?" to trigger curiosity about density, prompting initial guesses.  

Using a short simulation or experiment without explanation (e.g., dropping objects of different weights) to encourage inquiry.

Explore  
Purpose: Allow students to investigate and interact with the concept hands-on, building foundational observations before formal teaching.  

Description: Students participate in activities, collect data, and discuss findings, with you facilitating rather than lecturing.  

Methods: Hands-on tasks like mixing substances, observing phenomena, or testing variables (e.g., light intensity on plant growth).  

Examples:  
Conducting a vinegar and baking soda reaction to explore gas production and chemical changes, noting bubbles and temperature shifts.  

Using magnets to observe attraction and repulsion before explaining magnetic fields, letting students record patterns.  

Observing plant growth in different conditions (e.g., light vs. dark) before discussing photosynthesis, encouraging hypotheses.

Explain  
Purpose: Provide formal instruction and clarify concepts, connecting student observations to scientific principles.  

Description: Students share their findings, and you introduce key terms, definitions, and structured explanations to solidify understanding.  

Strategies:  
Guided discussions based on students’ findings (e.g., “What did you notice about the gas?”).  

Using diagrams, models, and multimedia for clarity (e.g., a pH scale chart or atomic model video).  

Relating the new concept to students’ prior knowledge (e.g., linking static electricity to lightning).

Examples:  
After an experiment with acids and bases, explaining the pH scale and indicators like litmus paper, defining terms like “neutralization.”  

Using a model of the atom to explain subatomic particles after students explore static electricity with balloons and wool.

Elaborate  
Purpose: Deepen understanding by applying concepts in new situations, enhancing critical thinking and real-world relevance.  

Description: This phase builds on prior learning, encouraging problem-solving and interdisciplinary connections.  

Activities:  
Project-based learning: Students design a water filtration system after learning about water purification, testing its effectiveness.  

Real-life applications: Applying Newton’s Laws to sports (e.g., kicking a ball), vehicle safety (e.g., seat belts), or space exploration (e.g., rocket thrust).  

Cross-disciplinary connections: Linking science to math (e.g., calculating circuit resistance), technology (e.g., coding a simulation), or history (e.g., discoveries like gravity).

Examples:  
After learning about electric circuits, students design a home lighting system, wiring a model house.  

After exploring ecosystems, students analyze local environmental issues (e.g., deforestation in Nepal) and propose solutions like reforestation plans.

Evaluate  
Purpose: Assess understanding and learning outcomes, ensuring mastery of science concepts.  

Description: Teachers use formative and summative assessments to check comprehension, which can be informal or formal.  

Methods:  
Concept maps to visualize understanding (e.g., mapping the water cycle).  

Exit tickets where students answer a key question before leaving class (e.g., “What’s one thing you learned about energy?”).  

Performance-based assessments, such as designing a science experiment (e.g., testing soil pH).

Examples:  
For Physics: Students create a working model of a simple machine (e.g., a lever) and explain its mechanics.  

For Chemistry: Students write a lab report explaining the reaction observed (e.g., copper sulfate and iron).  

For Biology: Students analyze real-world food chains (e.g., in a local forest) and present findings.

How to Use the 5E Model in Lesson Planning:  
Align the Lesson with Learning Objectives:  
Identify key concepts (e.g., “Understand chemical bonding”) and skills (e.g., “Measure reaction rates”) students need to acquire.  

Ensure each phase helps achieve these objectives (e.g., Explore tests hypotheses, Explain defines bonds).

Integrate Inquiry-Based Learning:  
Encourage students to ask questions (e.g., “What if we add more heat?”) and make predictions (e.g., “I think it’ll react faster”).  

Let them investigate before providing direct explanations (e.g., test variables first).

Use Differentiated Instruction:  
Modify activities for diverse learning styles (e.g., visual learners draw molecules, kinesthetic learners build models).  

Provide scaffolding for students needing support (e.g., step-by-step lab guides).

Foster Active Participation:  
Use technology (e.g., virtual labs), hands-on activities (e.g., dissections), and real-world applications (e.g., local weather data).  

Promote collaboration and peer discussions (e.g., “Compare your results with your partner”).

Continuously Assess and Reflect:  
Use formative assessments throughout (e.g., quick quizzes mid-lesson).  

Adjust instruction based on responses (e.g., reteach if half the class misunderstands).

Conclusion:
The 5E Lesson Plan is a powerful tool that transforms traditional science teaching into an engaging, student-centered experience. By actively involving learners in each phase, it promotes deep understanding, critical thinking, and retention of knowledge. When properly implemented, this model fosters inquiry, exploration, and application, making science learning more meaningful and effective for your students.

5. Teacher Competencies: Standards for Excellence in Science Teaching
5.1 Teacher Competency Framework 2072
The Teacher Competency Framework 2072 outlines essential competencies expected of you as a science teacher at The Excelsior School, encompassing various aspects of your professional practice. These competencies are described with specific indicators to guide your performance:  
Content Knowledge:  
Definition: This competency involves having in-depth knowledge of the subject you teach—science—to address students’ learning needs effectively.  

Indicators:  
In-depth and up-to-date knowledge in related subjects (e.g., current research on climate change or quantum physics).  

Information about concepts, principles, and interrelationships of related subjects (e.g., how physics principles like force relate to biology’s muscle movement).  

Information on the overall aspect, including the structure of the curriculum of science to be taught (e.g., knowing the progression from Grade 4 ecosystems to Grade 10 genetics).  

Knowledge about its interrelationship with other subjects (e.g., math in calculating chemical molarity, history in scientific discoveries).  

Knowledge about the relevance of the subject matter to the local environment (e.g., linking geology to Kathmandu Valley’s tectonic activity).

Application: You might use this to explain how local air pollution ties to chemistry concepts like particulate matter, making lessons relevant.

Pedagogical Knowledge:  
Definition: This refers to having in-depth knowledge about the teaching and learning process and being able to use that knowledge suitably in teaching science.  

Indicators:  
Up-to-date knowledge on different teaching methods and latest teaching technology (e.g., flipped classrooms, virtual labs).  

The ability to determine the educational plan and strategy to achieve course objectives and competencies (e.g., a three-week plan for mastering Newton’s Laws).  

The ability to choose the appropriate teaching method considering the subject matter (e.g., demos for chemistry), students’ level (e.g., simpler for Grade 4), and individual differences (e.g., extra visuals for visual learners).  

The ability to facilitate learning by using appropriate teaching methods and materials for active learning (e.g., hands-on pendulum experiments).  

The ability to evaluate various aspects of learning using appropriate tools (e.g., rubrics for lab reports), analyze results, and use them (e.g., adjust lessons based on quiz scores).  

The ability to ensure learning and conduct remedial teaching as needed through continuous evaluation (e.g., reteach photosynthesis if half the class struggles).

Application: You might use a mix of lectures, labs, and discussions to teach energy, assessing progress with quick checks and adapting as needed.

Knowledge about Children/Learners:  
Definition: This competency focuses on the ability to identify the diverse learning needs of children and teach accordingly, critical for a varied science classroom.  

Indicators:  
The ability to use knowledge about the physical, mental, social, and emotional development of children and its relationship with education (e.g., understanding adolescents need autonomy in experiments).  

The ability to establish a relationship with new learning by properly assessing prior knowledge (e.g., asking “What do you know about plants?” before photosynthesis).  

The ability to recognize and respect the linguistic and social, cultural values and diversity of learners (e.g., valuing Nepali terms students use for scientific phenomena).  

Recognizing that every child has the right to learn and can learn, expecting higher learning (e.g., believing all can master basic circuits).  

The ability to address the special learning needs and special abilities of children appropriately (e.g., extra time for a dyslexic student to read lab instructions).

Application: You might adjust a physics lesson on motion for a student with motor challenges by using simulations instead of physical models.

Learning Environment and Classroom Management:  
Definition: This competency involves being able to manage classrooms for effective teaching and learning while creating a child-friendly, supportive, and challenging learning environment, vital for science labs.  

Indicators:  
The ability to create a child-friendly learning environment by appropriately managing resources and facilities (e.g., organized lab stations with labeled tools) while considering the overall development of the school.  

The ability to organize groups as needed for creative learning opportunities (e.g., lab teams for a chemistry experiment).  

The ability to encourage exemplary behavior by maintaining cooperation and mutual understanding through positive discipline (e.g., praising students for following safety rules).  

The ability to provide other appropriate means and opportunities, including the use of the library and information technology (e.g., online research on ecosystems).  

The ability to guide students towards discovery and creation (e.g., letting them hypothesize in labs).  

The ability to continue learning by efficiently creating a suitable environment even in adverse situations (e.g., teaching outdoors if the lab is unavailable).

Application: You might set up a lab with clear safety zones and group students to explore magnetism, praising teamwork to reinforce norms.

Communication and Collaboration:  
Definition: This competency involves being able to communicate and collaborate effectively between students, parents, and teachers, enhancing science education’s reach.  

Indicators:  
The ability to communicate effectively for inquiry, collaboration, and engagement (e.g., asking “What do you think will happen?”).  

The ability to motivate students to learn, clarify subject matter, engage in guided activities, and provide academic advice (e.g., “Try this method for better results”).  

The ability to share experience, expertise, mutual support, and collaboration among colleagues to promote professional development and student participation (e.g., sharing a successful lab with peers).  

The ability to discuss and consult with parents for support and recording of achievements and other subjects (e.g., explaining a student’s lab progress at a meeting).

Application: You might encourage a shy student to present findings or discuss a project’s impact with parents to gain their support.

Continuous Learning and Professional Development:  
Definition: This competency reflects a commitment to continuous learning and professional development by analyzing existing knowledge, skills, and experience, crucial for staying current in science.  

Indicators:  
The desire to seek professional development opportunities and engage in continuous learning (e.g., attending a workshop on STEM teaching).  

The ability to be involved in continuous improvement through self-reflection (e.g., “Did my demo clarify the concept?”).  

The ability to keep informed about studies and research in your subject area (e.g., new biology findings) and carry out practical research to improve teaching and learning (e.g., testing a new lab method).  

Developing innovation and creativity through mutual support and collaboration (e.g., brainstorming with colleagues on a physics project).

Application: You might research a new climate model, test it in class, and refine it based on student feedback.

Legal Bases and Professional Conduct:  
Definition: This competency involves being capable of carrying out responsibilities by demonstrating ideal professional conduct in accordance with prevailing laws, regulations, and social values.  

Indicators:  
The ability to earn public trust by exhibiting respect and loyalty to the profession and demonstrating the highest ethical behavior (e.g., fair grading).  

The ability to take responsibility for actions and behavior by demonstrating ideal behavior according to laws and guidelines (e.g., adhering to safety regulations).  

The ability to demonstrate neutral and respectful behavior towards all children in line with professional codes and official dignity, committed to their best interests (e.g., encouraging all equally).  

The ability to demonstrate respect for social values and local culture (e.g., tying lessons to Nepali traditions) and tolerant behavior towards different opinions and beliefs.  

The ability to demonstrate appropriate behavior while being aware of global norms related to education (e.g., human rights, child rights, education as a fundamental right, education for all).

Application: You might ensure a lab is safe and inclusive, respecting students’ cultural perspectives on science topics.

Information and Communication Technology:  
Definition: This competency involves being able to use information and communication technology for effective teaching and learning, enhancing your science lessons.  

Indicators:  
The ability to select and use integrated learning strategies of information and communication technology to facilitate learning (e.g., virtual dissections).  

The ability to develop digital content suited to learners’ needs (e.g., a slideshow on ecosystems) and use available content adaptively (e.g., tweaking an online quiz).  

The ability to make effective mutual communication and collaboration to promote self-learning through IT tools (e.g., Google Classroom discussions).  

The ability to use IT for assessment and enrichment of learning (e.g., online tests or simulations).  

Being familiar with the policy related to IT in education and developments in digital culture to display appropriate professional behavior (e.g., knowing Nepal’s ICT education guidelines).

Application: You might use a virtual lab to teach atomic structure, assessing students via an online quiz tailored to their level.

6. Assessment & Evaluation: Measuring Student Progress in Science
6.1 Examination and Result Analysis
This document outlines the standards for you as a science teacher at The Excelsior School to evaluate your performance during terminal examinations, which are conducted on a quadrimester basis (three times yearly). The evaluation is based on the concept of the 3 A’s: Afore, Amid, and After the examination process.  
Stages:  
The examination process is divided into three stages: Afore (before), Amid (during), and After (after) the examination.

Parameters at Each Stage:  
Afore: Syllabus, Specification grid, Question paper and its answer key.  

Amid: Invigilation duty.  

After: Answer sheet correction, Report Card (Data entry and verification), Result analysis.

Standards for Teachers at Each Stage:  
Afore:  
Syllabus:  
Teachers must have an understanding of the syllabus and its usefulness to both teachers and students (e.g., knowing it guides lesson pacing).  

They should be able to create a comprehensible syllabus specific to a terminal exam (e.g., Term 1: Motion and Energy), mentioning details like the marking scheme (theory/practical) (e.g., 60 theory, 15 practical), study topics (e.g., Newton’s Laws), and textbooks/reference books with page numbers (e.g., “Science Explorer, pp. 20-40”).  

They are expected to teach the syllabus completely, ensuring no topic (e.g., friction) is skipped.

Specification Grid:  
Teachers need to understand the specification grid and be able to create a comprehensible one with details such as full marks (e.g., 75), time (e.g., 3 hours), question type (e.g., MCQs, short answers), question quantity (e.g., 10 MCQs, 5 short answers), and marking scheme (e.g., 1 mark per MCQ).  

This should be done a month prior to the examination to allow preparation time.

Question Paper and Its Key:  
Teachers must be able to prepare a question paper and its key while maintaining integrity (e.g., no leaks).  

They should create an original question paper that includes all learning levels (Bloom’s taxonomy)—recall (e.g., “Define velocity”), comprehension (e.g., “Explain inertia”), application (e.g., “Calculate speed”), analysis, synthesis, and evaluation—based on the syllabus and specification grid created beforehand.  

References to pre-existing questions are allowed but without plagiarism (e.g., rewording a sample question).  

The question paper is to be created a month prior to the examination, giving time for review.  

Teachers must recheck and verify the question paper before submitting it for verification (e.g., ensuring no typos in a physics formula).  

Create an answer key that facilitates understanding the closeness of an answer to full marks (e.g., “Full marks for including formula, calculation, and unit”).  

They are prohibited from providing probable questions in any form to students, maintaining fairness.

Amid:  
Invigilation Duty:  
Teachers should understand the importance of invigilation duty (e.g., ensuring a fair exam) and perform it efficiently.  

This includes reaching the exam hall on time (e.g., 10 minutes early), maintaining strict invigilation (e.g., no wandering), reminding students about remaining time (e.g., “15 minutes left”), helping them understand questions (e.g., clarifying “velocity” without answering), distributing question papers, and checking and signing answer scripts and supplementary papers.  

Teachers should not engage in activities such as reading, conversations, leaving without a substitute, correcting answer scripts, or helping students with answers during invigilation.  

They are also responsible for the answer sheets before handing them over to the Examination department, ensuring no loss or tampering.

After:  
Answer Sheet Correction:  
Teachers must be able to correct answer sheets and tabulate marks appropriately using a red pen (e.g., circling errors) and without any bias (e.g., grading all equally).  

They need to submit the marks to the Examination department within 3 to 4 days (duration may vary depending on exam size) and not disclose the marks to students before result distribution, preserving confidentiality.  

They are also responsible for generating data such as average marks (e.g., 65/75), range of marks (e.g., 45-72), and the number of students below the passing mark (e.g., 5 below 30) from the corrections, aiding analysis.

Report Card:  
Teachers should know about report card preparation and be extremely careful and precise while tabulating the marks, rechecking the marks grid (e.g., ensuring 68 matches the script) and tallying it with the answer sheet before submission to avoid errors.

Result Analysis:  
Teachers are expected to analyze the results based on answer sheet sampling (e.g., reviewing 5 scripts), data generation (e.g., average scores), compare and contrast (e.g., Term 1 vs. Term 2), and reflections (e.g., “Many struggled with equations”).  

They should discuss the results with the Instructional Supervisor for useful takeaways (e.g., “Students need more practice”) and strategy design for the next term (e.g., extra physics drills).  

They should devise plans to prevent the recurrence of pitfalls from one terminal exam to the next (e.g., more lab time to boost practical scores).

6.2 XLCR Internal Evaluation Protocol
This document outlines the internal assessment protocol for the Department of Science & Technology at The Excelsior School, aiming to provide a comprehensive and effective means of evaluating student progress in your science classes. The criteria apply to the assessment of each chapter in the science courses.  
Internal Evaluation Marks Distribution:  
Basic Level (Class 4 & 5 and Class 6 – 8):  
Attendance and participation: 4 marks.  

Experimental work: 20 marks (material setup, observation, testing, tabulation, conclusion, presentation, documentation).  

Project work: 16 marks (site visit, chart making, model making, material making, inquiry, presentation, documentation).  

Quarterly Examination: 10 marks (question paper based on specification grid, feedback for improvement).  

Total: 50 marks.

Secondary Level (Class 9 & 10):  
Attendance and participation: 3 marks.  

Experimental work: 10 marks (material setup, observation, testing, tabulation, conclusion, presentation, documentation).  

Project work: 6 marks (site visit, chart making, model making, material making, inquiry, presentation, documentation).  

Quarterly Examination: 6 marks (question paper based on specification grid, feedback for improvement).  

Total: 25 marks.

Assessment Criteria (for Each Chapter):  
Project Work:  
Assesses the application of theoretical knowledge in practical, creative, and innovative ways through models, presentations, posters, etc.  

Uses an evaluation rubric similar to the one in "PWP.docx.pdf" with criteria like Creativity and Originality, Scientific Accuracy, Presentation and Clarity, and Timeliness (e.g., Excellent: 4 points, Good: 3 points).

Lab Practical:  
Evaluates proficiency in practical science skills and the ability to conduct experiments accurately and safely through hands-on experiments.  

Criteria include Performance & Safety (e.g., proper goggle use), Presentation (e.g., clear verbal explanation), and Documentation in Record File (e.g., neat tables), each with rating scales (e.g., 1-5).

Notebooks Maintenance:  
Assesses consistency and quality of classwork and homework based on regular entries, organization, neatness, and completeness.  

Criteria include Organization (e.g., dated entries), Completeness (e.g., all questions answered), Neatness (e.g., legible handwriting), and Timeliness (e.g., submitted on time), each with rating scales.

Chapter Assessment:  
Measures understanding of chapter content through written or computer-based Multiple Choice Questions (MCQs) (e.g., “What gas is produced in photosynthesis?”).

Classroom Presence:  
Encourages and recognizes regular attendance, active participation, and engagement.  

Criteria include Attendance (e.g., present 95% of the time), Participation (e.g., asking questions), and Engagement (e.g., focused during demos), each with rating scales.

Implementation:  
Assessments will be conducted at the end of each chapter or major unit (e.g., after “Chemical Reactions”).  

Subject teachers are responsible for administering and recording scores (e.g., you track lab marks).  

Regular audits will be done to ensure compliance (e.g., supervisor checks records).  

Feedback will be provided after each component, highlighting strengths (e.g., “Great hypothesis!”) and areas for improvement (e.g., “Add more detail to conclusions”).  

Records will be maintained digitally (e.g., in a school database).  

Marks will be converted as per the CDC (Curriculum Development Centre) framework.  

Teachers are not obligated to give additional marks to students who disregard the internal evaluation system (e.g., skipping labs).

6.3 Unit Learning Verification Tests (ULET)
This document outlines the Formative Evaluation Assessment Process, known as Unit Learning Evidence Test Protocol (ULET), implemented at The Excelsior School to continuously monitor and support student learning in your science classes.  
Process Overview:  
This process involves a more granular assessment schedule than traditional end-of-term testing, focusing on frequent, smaller evaluations.  

Frequent Assessments: Multiple assessments are given at the end of each chapter or unit (e.g., after “Motion”) to identify learning gaps early and ensure continuous engagement.  

Variety of Test Formats: Individual departments can use various assessment methods and test item formats suited to learning objectives and subject matter (e.g., quizzes, lab tasks, oral questions). Traditional unit tests can be conducted with coordination, informing students a week prior, with no more than two tests in a day. This allows for differentiated tasks catering to diverse learning styles (e.g., written for auditory learners, practical for kinesthetic).  

Comprehensive Feedback: All scores are compiled and analyzed, and students receive detailed, specific, and actionable feedback to guide learning strategies (e.g., “Focus on explaining your steps in calculations”).  

Accurate Record Keeping: Assessment results are thoroughly documented and stored for future reference (e.g., in a digital gradebook), allowing tracking of progress and informing instruction.

Prerequisites for Unit Tests:  
Completion of Chapter-Related Tasks and Correction: Successful completion of classwork, homework, worksheets, projects, labs, and field visits, along with teacher correction (e.g., reviewed lab reports), is required before testing.  

Demonstration of Key Skills: Students may need to show proficiency in relevant skills through activities or presentations (e.g., using a microscope correctly).  

Teacher Recommendation: Teachers can use professional judgment to assess class readiness (e.g., “They’ve grasped velocity concepts”).  

Timing: Test timings should align with National Curriculum guidelines (3 hours for 75 marks, 2 hours for 50 marks), with a maximum of 2.4 minutes per mark (e.g., 48 minutes for 20 marks).

Benefits:  
Early Identification of Learning Gaps: Timely intervention and support become possible (e.g., extra help on density before it compounds).  

Improved Student Understanding: Diverse formats encourage deeper understanding by catering to different styles (e.g., a lab task reinforces theory).  

Data-Driven Instruction: Feedback and records provide valuable data for future instruction (e.g., noting many struggle with stoichiometry).  

Enhanced Student Engagement: Frequent and differentiated assessments can increase motivation through regular feedback and self-evaluation (e.g., “I improved from last time!”).

7. Student Engagement: Projects and Activities in Science
7.1 Project Work Protocol
This document outlines the project work guidelines for students in Grades 1 to 10 across the three academic terms at The Excelsior School. The aim is to ensure project work enhances learning without causing undue pressure, with most work to be completed within school premises under supervision, directly involving you as a science teacher.  
Key Objectives:  
Enhance Learning: Aligning projects with learning outcomes and deepening understanding (e.g., a model volcano ties to chemical reactions).  

Reduce Pressure: Minimizing stress by keeping project work within the school (e.g., no late-night home crafting).  

Encourage Collaboration: Fostering collaboration among teachers to avoid overlap and balance workload (e.g., coordinating with the math teacher).  

Engage with Environmental Awareness: Ensuring each student participates in an Environment Day project in Term 1 (e.g., recycling exhibit).  

Provide Varied Project Types: Offering a mix of styles like model-making, reports, investigations, writing assignments (e.g., a biology report vs. a physics model).

General Guidelines:  
Project Assignment: Each term will have at least one major project per student, often aligning with key dates like Environment Day. Project types can include model-making (e.g., solar system), investigations (e.g., water purity), reports (e.g., climate change), miniature models (e.g., cell structure), articles (e.g., “Why Planets Orbit”), and presentations (e.g., explaining a project orally).  

Completion Location: Most project work should be done within school hours under teacher supervision (e.g., in class or lab time). Teachers should monitor progress and provide support in class (e.g., guiding model construction). Projects will be assigned as home assignments only when necessary (e.g., if materials are unavailable at school).  

Teacher Collaboration: Teachers must coordinate within grade levels to prevent project overlap (e.g., avoiding two science models at once) and ensure a balanced workload across subjects through horizontal collaboration (e.g., meeting with other Grade 7 teachers). Regular progress checks and feedback should be provided during class time (e.g., “Your model needs a stronger base”).

Roles & Responsibilities:  
Students: Engage meaningfully with the project and meet objectives under supervision (e.g., researching ecosystem roles).  

Subject Teachers: Design projects aligned with learning outcomes and rubrics (e.g., a rubric for a physics bridge), supervise in school, and collaborate with colleagues (e.g., sharing ideas with the chemistry teacher).  

Class Teachers: Coordinate project timelines across subjects (e.g., ensuring science and math projects don’t clash) and ensure balanced workload within the class.  

Instructional Supervisor: Oversee project guideline adherence and provide support for smooth execution (e.g., approving a field trip).  

Parents: Support students by encouraging completion in school and ensuring a balanced workload at home (e.g., not overhelping).

Mark Allocation for Project Work:  
Grades 1 to 3: 16 marks.  

Grades 4 to 8: 16 marks out of 50 for internal assessment.  

Grades 9 to 10: 6 marks out of 25 for internal assessment.

Evaluation Rubric Sample:  
Includes criteria like Creativity and Originality (e.g., unique design), Scientific Accuracy (e.g., correct physics principles), Presentation and Clarity (e.g., neat model and explanation), and Timeliness (e.g., submitted on deadline), with corresponding points for different levels of achievement (Excellent: 4, Good: 3, Satisfactory: 2, Needs Improvement: 1).

Important Notes:  
Mini Projects: Short writing assignments, articles, or booklets may also be conducted under classroom supervision (e.g., a one-page report on fossils).  

Supervision: Teachers must ensure adequate time and resources for project completion during school hours (e.g., providing clay for models).  

Grading and Feedback: Projects will be assessed on effort, creativity, understanding, and adherence to guidelines. Timely feedback will be provided (e.g., “Add labels to your model next time”).  

Communication: Regular communication should be maintained with supervisors and guardians regarding student performance, highlighting areas of excellence (e.g., “Great creativity!”) and shortcomings (e.g., “Needs more research”).

7.2 World Environment Day at The Excelsior School
What is World Environment Day?
World Environment Day (WED) is celebrated annually on June 5th to raise awareness and promote action for environmental protection. Organized by the United Nations, it has been observed since 1973 and is one of the largest global outreach programs addressing issues like pollution, climate change, and conservation. At The Excelsior School, Environment Day is celebrated with various hands-on activities, projects, and performances that engage students in environmental action, directly involving you in planning and supervising science-related tasks.  
Environment Day 2024
Theme: #GenerationRestoration  

Hosted by: The Kingdom of Saudi Arabia  

Focus: Land restoration, desertification, and drought resilience  

Objectives:  
Raise awareness about environmental conservation (e.g., why soil matters).  

Encourage students to develop solutions for pollution and desertification (e.g., restoration models).  

Promote hands-on learning through activities and exhibitions (e.g., building exhibits).

Major Activities (2024):  
Grade

Activity

Description

1

School Cleaning Drill

Students cleaned classrooms and school premises (e.g., picking up litter).

2

Sorting Biodegradable & Non-Biodegradable Items

Buried waste and observed decomposition over time (e.g., banana peels vs. plastic).

3

Making Paper Bags

Created eco-friendly shopping bags from newspapers, reducing plastic use.

4

Paper Recycling Exhibit

Turned waste paper into recycled paper and crafts (e.g., bookmarks).

5

Plastic to Fantastic

Converted plastic waste into useful and decorative items (e.g., planters).

6

Desertification & Restoration Exhibit

Created models showcasing land degradation and recovery (e.g., barren vs. green land).

7

Parents’ Day Performance

A theatrical performance highlighting environmental issues (e.g., a skit on drought).

8

Thread Art

Created art based on the Environment Day theme using colorful threads (e.g., a dry-to-lush landscape).

9

Swoyambhunath Stupa Cleaning

Cleaned a local heritage site to promote community responsibility, linking science to action.

Key Highlights (2024):  
Interactive Learning: Hands-on experiences such as waste sorting, recycling, and restoration models helped students grasp environmental concepts (e.g., decomposition rates).  

Community Engagement: The Swoyambhunath Stupa cleaning drive involved students in protecting their cultural heritage, showing science’s societal role.  

Art & Performance: Creative elements like thread art, music, and theatre performances reinforced environmental messages (e.g., a song about restoration).

Environment Day 2023
Theme: #BeatPlasticPollution  

Major Activities (2023):  
Grade

Activity

Description

1

School & Community Cleanliness

Cleaned school surroundings and nearby areas (e.g., picking up wrappers).

2

Biodegradable vs. Non-Biodegradable Sorting

Buried waste to study decomposition (e.g., paper vs. plastic bags).

3

Making Paper Bags

Created paper bags from old newspapers to replace plastic.

4

Paper Recycling

Produced recycled paper from waste materials (e.g., new sheets from scraps).

5

Plastic to Fantastic

Upcycled plastic waste into useful items (e.g., pencil holders).

6

National Park Models

Designed models of wildlife conservation areas (e.g., Chitwan National Park).

7

Stage Performances

Drama, music, and dance highlighting environmental themes (e.g., a dance on pollution).

8

Agamograph Art

Created dual-image artworks related to environmental conservation (e.g., clean vs. polluted river).

9

Swoyambhunath Stupa Cleaning

Conducted a cleanup drive at the heritage site, linking science to community service.

Key Highlights (2023):  
The #BeatPlasticPollution theme emphasized plastic waste reduction, with activities like upcycling reinforcing this focus.  

Students designed National Park models to learn about conservation, connecting biology to real-world issues.  

The event featured a mix of science, art, and community service to promote environmental awareness (e.g., sorting tied to chemistry of decay).  

Public performances and creative art projects showcased environmental messages (e.g., a drama on plastic’s impact).

Comparison of 2023 & 2024 Events
Category

2023: #BeatPlasticPollution

2024: #GenerationRestoration

Focus

Reducing plastic waste

Land restoration & desertification

Art Projects

Agamograph Art (dual images)

Thread Art (colorful depictions)

Performances

Drama, Music, Dance

Theatrical & Musical Performance

Major Hands-on Learning

Recycling & Plastic Upcycling

Waste Sorting & Restoration Models

Community Activity

Swoyambhunath Stupa Cleaning

Swoyambhunath Stupa Cleaning

Scientific Models

National Park Conservation

Desertification & Restoration Models

Key Takeaways
Holistic Learning Approach: The Excelsior School integrates science, art, and social responsibility into its Environment Day celebrations (e.g., chemistry in recycling, art in thread designs).  

Community Involvement: Activities like stupa cleaning and waste management extend beyond the school, showing science’s societal impact.  

Progressive Themes: The school follows the UN Environment Program themes each year, aligning with global sustainability goals (e.g., pollution in 2023, restoration in 2024).  

Hands-on Activities: Students engage in practical tasks (waste sorting, recycling, land restoration) to reinforce environmental concepts (e.g., biology of decomposition).

7.3 The Excelsior School – Intraschool Science Olympiad Overview
What is the Science Olympiad?
The Science Olympiad is a STEAM-based competition (Science, Technology, Engineering, Arts, Mathematics) where students compete in different scientific disciplines, including Physics, Chemistry, Biology, Astronomy, and Design. As a science teacher, you play a key role in preparing students and possibly designing challenges. The competition is divided into two main categories:  
1. Study Round:  
A theoretical competition with MCQ (Multiple Choice Questions) and subjective questions based on various science topics (e.g., “What’s the primary source of Earth’s energy?” or “Explain photosynthesis”).

2. Build Round:  
A hands-on challenge where students design and construct structures for specific tasks. Examples:  
Catapult Challenge: Build a catapult to launch objects (e.g., a small ball) a set distance.  

Bridge Strength Challenge: Create a bridge with minimal mass that can support maximum weight (e.g., holding books).  

Musical Instrument Challenge: Construct and perform using a self-made instrument (e.g., a straw flute).

Learning Outcomes
The Olympiad helps students develop key skills and competencies, which you can reinforce in your teaching:  
 Conceptual Understanding – Encourages deep learning through research-based activities (e.g., studying force for the catapult).  

 Analytical & Problem-Solving Skills – Enhances students’ ability to analyze and solve challenges (e.g., tweaking a bridge design).  

 Improved Academic Performance – Strengthens critical thinking, leading to better grades (e.g., applying Olympiad physics to exams).  

 Boosted Self-Confidence – Helps students become comfortable in competitive settings (e.g., presenting their build).  

 Teamwork & Collaboration – Encourages teamwork, communication, and collective problem-solving (e.g., group planning for a challenge).

Competition Structure
Day

Category

Time

Task

Participation

Points

Day 1

Study Round

20 min

MCQ Test (20 Qs, 1 mark each)

Individual

30

60 min

Subjective Questions (5 Qs, 4 marks each)

Team

25

Day 2

Build Round

60 min

Design, Build & Execution

Team

20

Total Points

75

Participant Selection Process
Online Registration – Students register with their House teachers (e.g., Red House, Blue House).  

MCQ Round – 48 students (12 per house) qualify for the next round based on scores.  

Subjective Round – Each house randomly forms 3 teams (total 12 teams) to answer detailed questions.  

Build Round – The best team from each house competes (4 teams in total) in the hands-on challenge.  

Awards – Gold, Silver, and Bronze medals + certificates for the winners; the 4th team receives certificates only.

Who Organizes the Olympiad?
The grade teachers and instructional supervisor create the questions and challenges (e.g., you might design a chemistry MCQ or a physics build task).  

The event is open to all levels (juniors, intermediates, and seniors), ensuring broad participation.

Key Takeaways
 A fun, competitive, and engaging way for students to apply science concepts (e.g., physics in catapults).  

 Encourages critical thinking, teamwork, and creativity (e.g., designing under constraints).  

 Promotes both theoretical knowledge and hands-on problem-solving, aligning with your teaching goals.  

The Science Olympiad at The Excelsior School is a platform for young scientists to showcase their skills and develop a passion for innovation! 

7.4 Candle Making Activity – Tihar Festival (Grade 7)
Overview
The Candle Making Activity is an interactive, hands-on learning experience designed for Grade 7 students at The Excelsior School, conducted during the Tihar festival (a major Nepali holiday celebrating light and prosperity). This activity provides students with the opportunity to craft decorative candles using wax, colors, and molds, fostering both creativity and practical skills, with you guiding the science behind it.  
Beyond the creative aspect, the initiative also incorporates entrepreneurial learning. The candles produced by the students are sold during Grade 5 Parents’ Day to parents and the school community. This allows students to experience the fundamentals of entrepreneurship, including production (making candles), marketing (promoting their work), and financial literacy (handling sales and profits), blending science with real-world skills.

Materials Required
S.N

Materials

Quantity

1

Wax

15 kg (enough for multiple batches)

2

Thread (for wicks)

10 m (cut into pieces for each candle)

3

Candle Colors

5-6 packets (variety for decoration)

4

Heating Stove

1 (for melting wax)

5

Ladle (डाडु)

2 (for pouring wax)

6

Metal Cup

2 (for melting smaller amounts)

7

Gas Cylinder

1 (fuel for the stove)

8

Candle Moulds (सांचो)

Small-2, Medium-2, Large-2 (variety of sizes)

9

Thick Plastic Sheet (त्रिपाल)

1 (to protect surfaces from spills)

Key Learning Outcomes
Hands-on Craftsmanship:  
Students gain practical experience in wax melting (understanding melting points), color mixing (exploring pigment dispersion), and molding techniques (shaping liquids into solids), enhancing their technical skills and creativity in a science context.

Entrepreneurial Mindset:  
Through selling their handmade candles, students develop an understanding of business fundamentals, including pricing (e.g., setting a fair cost), customer interaction (e.g., explaining their product), and financial transactions (e.g., calculating profit), nurturing responsibility and financial awareness.

Festival and Cultural Connection:  
By creating decorative candles for Tihar, students engage with cultural traditions (e.g., lighting candles for Lakshmi), reinforcing the importance of craftsmanship and sustainability in celebrations (e.g., reusable molds vs. disposables).

Teamwork and Collaboration:  
The activity promotes team-based learning, where students work together in production (e.g., melting wax), packaging (e.g., wrapping candles), and sales (e.g., running a stall), fostering collaborative and communication skills applicable to lab work.

Conclusion
The Candle Making Activity seamlessly integrates science (e.g., states of matter), creativity (e.g., designing unique candles), culture (e.g., Tihar traditions), and entrepreneurship (e.g., selling products), offering students a practical and meaningful learning experience. Through this initiative, students not only develop craftsmanship skills but also gain firsthand experience in small-scale business operations, preparing them for real-world financial and entrepreneurial challenges in the future, all under your scientific guidance.  

7.5 Pi Day Celebrations at The Excelsior School
What is Pi Day?
Pi Day, celebrated annually on March 14 (3.14), honors the mathematical constant π (pi), which represents the ratio of a circle’s circumference to its diameter (approximately 3.14159). This day not only highlights the beauty of mathematics but also fosters creativity, problem-solving, and critical thinking through engaging STEAM-based activities, making it a perfect science-math crossover event for you to lead or support.  
Pi Day 2023 Activities
Grade-wise Events & Challenges:  
Pi Day 2023 Activities (Continued)
Grade-wise Events & Challenges (Continued):  
Grade

Activity

Description

Participation

Materials Used

Prizes

Facilitator

6

Straw Tower Design Challenge

Design a straw tower that can hold a cricket ball for 3 seconds, testing structural engineering and physics concepts like balance and load distribution.

Group of 6

25 straws, masking tape, scissors

Choco Pie for all team members

Sobit Pradhan

7

Pi-Themed Treasure Hunt

Navigate through school using Pi-based clues (e.g., “Walk 3.14 meters north”) to find a hidden prize, blending math with problem-solving.

Group of 6

Hints, clues, periodic table

Choco Pie for all team members

Sahana Malakar

8

Pi-Themed Physics Numerical Challenge

Solve 7 Pi-related physics problems in 22 minutes (e.g., calculating circular motion or pendulum periods using π), emphasizing quick application of concepts.

Individual

Numerical worksheet

Choco Pie (Top 3), Candy (Top 10)

Sachita Bajracharya

Key Highlights (2023):  
Interdisciplinary Learning: Activities combined math (π calculations), science (physics principles), and creativity (tower design), aligning with your STEAM focus as a science teacher.  

Engagement: Competitive yet fun tasks (e.g., treasure hunt) kept students motivated, encouraging active participation across grades.  

Practical Application: Challenges like the straw tower linked theoretical concepts (e.g., force and stability) to hands-on construction, mirroring lab-based learning.

Pi Day 2024 Activities
Overview:  
Pi Day 2024 expanded into a three-day celebration from March 13 to March 15, offering a mix of art, math, and science activities to deepen students’ appreciation of π.

Detailed Plan:  
Date

Activity

Description

Grade

March 13

Poster-Making Competition

Create artistic posters themed around π (e.g., circular designs with 3.14), blending creativity with math awareness.

6-8

March 14

Pi Day Hunt

A school-wide treasure hunt with Pi-related clues (e.g., “Measure this circle’s circumference”), fostering teamwork and problem-solving.

6-8

March 15

Challenge Day

Grade-specific STEAM challenges (e.g., Grade 6: straw towers; Grade 7: Pi quizzes; Grade 8: physics problems), testing diverse skills.

6-8

Key Highlights (2024):  
Extended Celebration: The three-day format allowed broader participation and varied activities, enhancing engagement over a single day.  

Art-Science Fusion: Poster-making connected artistic expression to mathematical precision, appealing to diverse learners.  

Collaborative Fun: The hunt and challenges encouraged group dynamics, similar to lab group cooperation you’d oversee.

Pi Day 2025 Activities
Overview:  
Planned for March 14, 2025, Pi Day 2025 introduces a digital learning focus alongside traditional activities, leveraging technology to explore π’s significance, aligning with your ICT competency as a science teacher.

Tentative Plan:  
Activity

Description

Grade

Audiobook Listening

Listen to an audiobook on the history of π (e.g., its discovery by Archimedes), sparking curiosity about its origins.

6-8

Video Documentary

Watch a documentary on π’s applications (e.g., in engineering or astronomy), connecting math to real-world science.

6-8

Pi Bingo

Play a bingo game with Pi-related numbers and facts (e.g., 3.14, circumference formulas), making learning playful.

6-8

Key Highlights (2025):  
Tech Integration: Digital tools like audiobooks and videos modernize the celebration, reflecting your role in using ICT for science education.  

Interactive Learning: Bingo gamifies math facts, keeping students engaged in a low-pressure setting.  

Future-Oriented: Prepares students for tech-driven learning environments, a skill you can reinforce in science lessons.

Key Takeaways Across Years
Evolution of Celebration: From a single-day event in 2023 to a three-day fest in 2024, and a tech-infused plan for 2025, Pi Day grows in scope and innovation, offering you diverse ways to integrate science and math.  

STEAM Focus: Activities consistently blend science (e.g., physics challenges), technology (e.g., documentaries), engineering (e.g., towers), arts (e.g., posters), and math (e.g., π calculations), aligning with your interdisciplinary teaching goals.  

Student Benefits: Enhances problem-solving, creativity, and collaboration—skills you nurture in lab settings—while making abstract concepts tangible and fun.




